{"version":3,"sources":["../static/js/main.eb3481b9.js","../webpack/bootstrap 9eb3b725c3d403f799e7","../node_modules/inferno/index.js","../node_modules/promise/lib/core.js","../node_modules/inferno-component/index.js","../node_modules/inferno-scripts/config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/webpack/buildin/global.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/object-assign/index.js","index.js","../node_modules/inferno/dist/index.js","App.js","../node_modules/inferno-component/dist/index.js","modules/storm/lib.js","../node_modules/inferno-create-element/index.js","../node_modules/inferno-create-element/dist/index.js","storms/app-base/spec.js","storms/app-base/background/entry.js","storms/app-base/background/weather-patterns.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","this","TypeError","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_47","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","length","done","value","reason","_44","enable","window","assign","disable","enabled","options","onUnhandled","id","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","err","setTimeout","stack","split","forEach","line","list","some","cls","ReferenceError","RangeError","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","document","createTextNode","observe","characterData","data","g","Function","eval","e","valuePromise","TRUE","FALSE","NULL","UNDEFINED","undefined","ZERO","EMPTYSTRING","all","arr","args","Array","slice","val","remaining","race","values","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","support","iterable","Symbol","Headers","headers","map","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","fromCharCode","join","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","parts","key","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","keys","entries","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","toObject","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","target","source","from","symbols","to","arguments","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_inferno__","__WEBPACK_IMPORTED_MODULE_1__App__","render","getElementById","isStatefulComponent","isUndefined","isStringOrNumber","isNullOrUndef","isNull","isInvalid","isTrue","isFunction","isString","isNumber","isObject","throwError","message","ERROR_MSG","combineFrom","first","second","out","key$1","Lifecycle","listeners","handleEvent","lastEvent","nextEvent","dom","delegatedRoots","delegatedEvents$1","Map","docEvent","attachEventToDocument","isiOS","trapClickOnNonInteractiveElement","delete","size","removeEventListener","normalizeEventName","dispatchEvents","event","count","isClick","eventData","disabled","eventsToTrigger","cancelBubble","parentNode","substr","stopPropagation","stopImmediatePropagation","addEventListener","emptyFn","onclick","isCheckedType","onTextInputChange","vNode","props","EMPTY_OBJ","previousValue","onInput","oninput","newVNode","newProps","applyValue","wrappedOnChange","onChange","onCheckboxChange","onClick","processInput","nextPropsOrEmpty","mounting","isControlled","wrapped","onchange","checked","multiple","defaultValue","hasValue","setAttribute","updateChildOptionGroup","children","len","updateChildOption","isVNode","selected","onSelectChange","applyValue$1","processSelect","wrappedOnChange$1","onTextareaInputChange","applyValue$2","processTextarea","domValue","processElement","flags","isControlledFormElement","normalizeChildNodes","parentDom","firstChild","nodeType","placeholder","replaceChild","nextSibling","lastDom","previousSibling","removeChild","hydrateComponent","lifecycle","context","isSVG","isClass","ref","_isSVG","namespaceURI","svgNS","instance","createClassComponentInstance","_lastInput","_vNode","hydrate","_childContext","mountClassComponentCallbacks","_updating","findDOMNodeEnabled","componentToDOMNodeMap","input$1","createFunctionalComponentInput","mountFunctionalComponentCallbacks","hydrateElement","className","tagName","newDom","mountElement","isSamePropsInnerHTML","textContent","hydrateChildren","hasControlledValue","isFormElement","prop","patchProp","removeAttribute","mountRef","appendChild","nodeValue","child","mount","nextSibling$1","hydrateText","mountText","hydrateVoid","hydrateRoot","recycleElement","tag","pools","elementPools","pool","nonKeyed","keyed","recycledVNode","pop","patchElement","poolElement","recycleComponent","componentPools","patchComponent","poolComponent","hooks","onComponentWillMount","onComponentWillUnmount","onComponentDidMount","onComponentWillUpdate","onComponentDidUpdate","unmount","canRecycle","isRecycling","isStatefulComponent$$1","_unmounted","beforeUnmount","componentWillUnmount","_lifecycle","recyclingEnabled","ref$1","props$1","isAttrAnEvent","patchEvent","findDOMNode","getRoot","roots","root","setRoot","removeRoot","splice","documentBody","NO_OP","directClone","trigger","lifecycle$1","patch","rootInput","createRenderer","lastInput","nextInput","lastVNode","nextVNode","lastFlags","nextFlags","replaceVNode","mountComponent","patchText","patchVoid","mountVoid","replaceLastChildAndUnmount","unmountChildren","removeAllChildren","nextTag","replaceWithNewNode","lastProps","nextProps","lastChildren","nextChildren","nextRef","lastClassName","nextClassName","patchChildren","lastPropsOrEmpty","nextValue","prop$1","removeProp","patchArray","patchKeyed","setTextContent","mountArrayChildren","updateTextContent","isKeyed","lastLength","nextLength","patchKeyedChildren","patchNonKeyedChildren","lastType","nextType","lastKey","nextKey","hasComponentDidUpdate","componentDidUpdate","nextState","state","lastState","_updateComponent","childContext","didUpdate","getChildContext","createVoidVNode","createTextVNode","parentVNode","afterUpdate","shouldUpdate","lastProps$1","nextHooks","nextHooksDefined","lastInput$1","nextInput$1","onComponentShouldUpdate","nextText","lastChildrenLength","nextChildrenLength","commonLength","nextChild","nextChild$1","aLength","bLength","j","aNode","bNode","nextNode","nextPos","aEnd","bEnd","aStart","bStart","aStartNode","bStartNode","aEndNode","bEndNode","outer","insertOrAppend","aLeft","bLeft","sources","moved","pos","patched","keyIndex","seq","lis_algorithm","u","v","arrI","attr","lastValue","skipProps","booleanProps","strictProps","patchStyle","lastHtml","__html","nextHtml","isSameInnerHTML","innerHTML","namespaces","setAttributeNS","delegatedEvents","nameLowerCase","domEvent","linkEvent","lastAttrValue","nextAttrValue","style","domStyle","cssText","isUnitlessNumber","documentCreateElement","childrenIsSVG","hasDidMount","componentDidMount","afterMount","addListener","Component","_blockSetState","componentWillMount","_blockRender","_pendingSetState","pending","_pendingState","beforeRender","afterRender","component","textNode","newNode","insertBefore","createElementNS","createElement","lastNode","removeChildren","tempdom","Boolean","dangerouslySetInnerHTML","createVNode","noNormalise","normalize","vNodeToClone","propsToClone","newChildren","tmpArray","propsToClone$1","cloneVNode","_children","len$2","childrenLen","len$1","tmpArray$1","i$1","applyKey","applyKeyIfMissing","applyKeyPrefix","_normalizeVNodes","nodes","currentKey","normalizeVNodes","newNodes","normalizeChildren","normalizeProps","getFlagsForElementVnode","defaultProps","isBrowser","listener","xlinkNS","xmlNS","Set","add","navigator","platform","internal_DOMNodeMap","internal_isUnitlessNumber","internal_normalize","internal_patch","version","_classCallCheck","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_1_inferno_component__","__WEBPACK_IMPORTED_MODULE_1_inferno_component___default","__WEBPACK_IMPORTED_MODULE_2__modules_storm_lib_js__","__WEBPACK_IMPORTED_MODULE_3__storms_app_base_spec_js__","_createClass","defineProperties","descriptor","protoProps","staticProps","_class","_Component","getPrototypeOf","log","setState","storm_set","catch","_this2","namespace","spec","store","params","setStore","onInitialRender","environment","onError","field","href","margin","addToQueue","force","componentCallbackQueue","resolvedPromise","applyState","queueStateChanges","newState","stateKey","pendingState","prevState","renderOutput","inferno","lifeCycle","forceUpdate","prevProps","fromSetState","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","nextContext","_toConsumableArray","arr2","_defineProperty","SetupStorm","Storm","__WEBPACK_IMPORTED_MODULE_2_inferno_create_element__","__WEBPACK_IMPORTED_MODULE_2_inferno_create_element___default","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","sys_namespace","storm_transitions","stormName","ns","expose_storm","exposedNamespacedProps","stormBackground","userspace","getStore","scripts","transitions","script","baseSet","loadersOnly","loaders","addProps","background","initSetScope","_this3","api","_this","composeStoreState","_ref","_ref2","loadKeys","_ref2$","fetcher","bases","loadDataAtKey","loadKey","load_keys","scoped_keys","_this4","apply","concat","scoped_key","renderReactiveChild","display","scopeStore","reduce","accum","array","includes","additionalProps","padKeys","_ref6","_ref7","_ref7$","transition","extractByNamespace","pad","componentHooks","__WEBPACK_IMPORTED_MODULE_0__background_entry_js__","setScope","temperature","heat_wave","__WEBPACK_IMPORTED_MODULE_0__weather_patterns_js__","BACKGROUND_SCRIPTS","initBackgroundScripts","stormspace","storm"],"mappings":"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","file":"static/js/main.eb3481b9.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(12).default;\nmodule.exports.default = module.exports;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(6);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(14).default;\nmodule.exports.default = module.exports;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(4);\nmodule.exports = __webpack_require__(11);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where Inferno gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes Inferno's erratic future behavior.\n  __webpack_require__(5).enable();\n  window.Promise = __webpack_require__(8);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(9);\n\n// Object.assign() is commonly used with Inferno.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(10);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(1);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(1);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_inferno__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(13);\nObject(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"render\"])(Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(16,__WEBPACK_IMPORTED_MODULE_1__App__[\"a\" /* default */]),document.getElementById('app'));\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// This should be boolean and not reference to window.document\r\nvar isBrowser = !!(typeof window !== \"undefined\" && window.document);\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStatefulComponent(o) {\r\n    return !isUndefined(o.prototype) && !isUndefined(o.prototype.render);\r\n}\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNumber(o) {\r\n    return typeof o === \"number\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction warning(message) {\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(message);\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar options = {\r\n    afterMount: null,\r\n    afterRender: null,\r\n    afterUpdate: null,\r\n    beforeRender: null,\r\n    beforeUnmount: null,\r\n    createVNode: null,\r\n    findDOMNodeEnabled: false,\r\n    recyclingEnabled: false,\r\n    roots: []\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar xlinkNS = \"http://www.w3.org/1999/xlink\";\r\nvar xmlNS = \"http://www.w3.org/XML/1998/namespace\";\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\nvar strictProps = new Set();\r\nstrictProps.add(\"volume\");\r\nstrictProps.add(\"defaultChecked\");\r\nvar booleanProps = new Set();\r\nbooleanProps.add(\"muted\");\r\nbooleanProps.add(\"scoped\");\r\nbooleanProps.add(\"loop\");\r\nbooleanProps.add(\"open\");\r\nbooleanProps.add(\"checked\");\r\nbooleanProps.add(\"default\");\r\nbooleanProps.add(\"capture\");\r\nbooleanProps.add(\"disabled\");\r\nbooleanProps.add(\"readOnly\");\r\nbooleanProps.add(\"required\");\r\nbooleanProps.add(\"autoplay\");\r\nbooleanProps.add(\"controls\");\r\nbooleanProps.add(\"seamless\");\r\nbooleanProps.add(\"reversed\");\r\nbooleanProps.add(\"allowfullscreen\");\r\nbooleanProps.add(\"novalidate\");\r\nbooleanProps.add(\"hidden\");\r\nbooleanProps.add(\"autoFocus\");\r\nbooleanProps.add(\"selected\");\r\nbooleanProps.add(\"indeterminate\");\r\nvar namespaces = new Map();\r\nnamespaces.set(\"xlink:href\", xlinkNS);\r\nnamespaces.set(\"xlink:arcrole\", xlinkNS);\r\nnamespaces.set(\"xlink:actuate\", xlinkNS);\r\nnamespaces.set(\"xlink:show\", xlinkNS);\r\nnamespaces.set(\"xlink:role\", xlinkNS);\r\nnamespaces.set(\"xlink:title\", xlinkNS);\r\nnamespaces.set(\"xlink:type\", xlinkNS);\r\nnamespaces.set(\"xml:base\", xmlNS);\r\nnamespaces.set(\"xml:lang\", xmlNS);\r\nnamespaces.set(\"xml:space\", xmlNS);\r\nvar isUnitlessNumber = new Set();\r\nisUnitlessNumber.add(\"animationIterationCount\");\r\nisUnitlessNumber.add(\"borderImageOutset\");\r\nisUnitlessNumber.add(\"borderImageSlice\");\r\nisUnitlessNumber.add(\"borderImageWidth\");\r\nisUnitlessNumber.add(\"boxFlex\");\r\nisUnitlessNumber.add(\"boxFlexGroup\");\r\nisUnitlessNumber.add(\"boxOrdinalGroup\");\r\nisUnitlessNumber.add(\"columnCount\");\r\nisUnitlessNumber.add(\"flex\");\r\nisUnitlessNumber.add(\"flexGrow\");\r\nisUnitlessNumber.add(\"flexPositive\");\r\nisUnitlessNumber.add(\"flexShrink\");\r\nisUnitlessNumber.add(\"flexNegative\");\r\nisUnitlessNumber.add(\"flexOrder\");\r\nisUnitlessNumber.add(\"gridRow\");\r\nisUnitlessNumber.add(\"gridColumn\");\r\nisUnitlessNumber.add(\"fontWeight\");\r\nisUnitlessNumber.add(\"lineClamp\");\r\nisUnitlessNumber.add(\"lineHeight\");\r\nisUnitlessNumber.add(\"opacity\");\r\nisUnitlessNumber.add(\"order\");\r\nisUnitlessNumber.add(\"orphans\");\r\nisUnitlessNumber.add(\"tabSize\");\r\nisUnitlessNumber.add(\"widows\");\r\nisUnitlessNumber.add(\"zIndex\");\r\nisUnitlessNumber.add(\"zoom\");\r\nisUnitlessNumber.add(\"fillOpacity\");\r\nisUnitlessNumber.add(\"floodOpacity\");\r\nisUnitlessNumber.add(\"stopOpacity\");\r\nisUnitlessNumber.add(\"strokeDasharray\");\r\nisUnitlessNumber.add(\"strokeDashoffset\");\r\nisUnitlessNumber.add(\"strokeMiterlimit\");\r\nisUnitlessNumber.add(\"strokeOpacity\");\r\nisUnitlessNumber.add(\"strokeWidth\");\r\nvar skipProps = new Set();\r\nskipProps.add(\"children\");\r\nskipProps.add(\"childrenType\");\r\nskipProps.add(\"defaultValue\");\r\nskipProps.add(\"ref\");\r\nskipProps.add(\"key\");\r\nskipProps.add(\"checked\");\r\nskipProps.add(\"multiple\");\r\nvar delegatedEvents = new Set();\r\ndelegatedEvents.add(\"onClick\");\r\ndelegatedEvents.add(\"onMouseDown\");\r\ndelegatedEvents.add(\"onMouseUp\");\r\ndelegatedEvents.add(\"onMouseMove\");\r\ndelegatedEvents.add(\"onSubmit\");\r\ndelegatedEvents.add(\"onDblClick\");\r\ndelegatedEvents.add(\"onKeyDown\");\r\ndelegatedEvents.add(\"onKeyUp\");\r\ndelegatedEvents.add(\"onKeyPress\");\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar isiOS = isBrowser &&\r\n    !!navigator.platform &&\r\n    /iPad|iPhone|iPod/.test(navigator.platform);\r\nvar delegatedEvents$1 = new Map();\r\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\r\n    var delegatedRoots = delegatedEvents$1.get(name);\r\n    if (nextEvent) {\r\n        if (!delegatedRoots) {\r\n            delegatedRoots = { items: new Map(), docEvent: null };\r\n            delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\r\n            delegatedEvents$1.set(name, delegatedRoots);\r\n        }\r\n        if (!lastEvent) {\r\n            if (isiOS && name === \"onClick\") {\r\n                trapClickOnNonInteractiveElement(dom);\r\n            }\r\n        }\r\n        delegatedRoots.items.set(dom, nextEvent);\r\n    }\r\n    else if (delegatedRoots) {\r\n        var items = delegatedRoots.items;\r\n        if (items.delete(dom)) {\r\n            // If any items were deleted, check if listener need to be removed\r\n            if (items.size === 0) {\r\n                document.removeEventListener(normalizeEventName(name), delegatedRoots.docEvent);\r\n                delegatedEvents$1.delete(name);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction dispatchEvents(event, target, items, count, isClick, eventData) {\r\n    var dom = target;\r\n    while (count > 0) {\r\n        if (isClick && dom.disabled) {\r\n            return;\r\n        }\r\n        var eventsToTrigger = items.get(dom);\r\n        if (eventsToTrigger) {\r\n            count--;\r\n            // linkEvent object\r\n            eventData.dom = dom;\r\n            if (eventsToTrigger.event) {\r\n                eventsToTrigger.event(eventsToTrigger.data, event);\r\n            }\r\n            else {\r\n                eventsToTrigger(event);\r\n            }\r\n            if (event.cancelBubble) {\r\n                return;\r\n            }\r\n        }\r\n        dom = dom.parentNode;\r\n        // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n        // because the event listener is on document.body\r\n        // Don't process clicks on disabled elements\r\n        if (dom === null) {\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction normalizeEventName(name) {\r\n    return name.substr(2).toLowerCase();\r\n}\r\nfunction stopPropagation() {\r\n    this.cancelBubble = true;\r\n    this.stopImmediatePropagation();\r\n}\r\nfunction attachEventToDocument(name, delegatedRoots) {\r\n    var docEvent = function (event) {\r\n        var count = delegatedRoots.items.size;\r\n        if (count > 0) {\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData = {\r\n                dom: document\r\n            };\r\n            try {\r\n                Object.defineProperty(event, \"currentTarget\", {\r\n                    configurable: true,\r\n                    get: function get() {\r\n                        return eventData.dom;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                /* safari7 and phantomJS will crash */\r\n            }\r\n            dispatchEvents(event, event.target, delegatedRoots.items, count, event.type === \"click\", eventData);\r\n        }\r\n    };\r\n    document.addEventListener(normalizeEventName(name), docEvent);\r\n    return docEvent;\r\n}\r\n// tslint:disable-next-line:no-empty\r\nfunction emptyFn() { }\r\nfunction trapClickOnNonInteractiveElement(dom) {\r\n    // Mobile Safari does not fire properly bubble click events on\r\n    // non-interactive elements, which means delegated click listeners do not\r\n    // fire. The workaround for this bug involves attaching an empty click\r\n    // listener on the target node.\r\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n    // Just set it using the onclick property so that we don't have to manage any\r\n    // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n    // removed.\r\n    // TODO: Only do this for the relevant Safaris maybe?\r\n    dom.onclick = emptyFn;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction isCheckedType(type) {\r\n    return type === \"checkbox\" || type === \"radio\";\r\n}\r\nfunction onTextInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onCheckboxChange(e) {\r\n    e.stopPropagation(); // This click should not propagate its for internal use\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    if (props.onClick) {\r\n        var event = props.onClick;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onclick) {\r\n        props.onclick(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    applyValue(newProps, dom);\r\n}\r\nfunction processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            if (isCheckedType(nextPropsOrEmpty.type)) {\r\n                dom.onclick = onCheckboxChange;\r\n                dom.onclick.wrapped = true;\r\n            }\r\n            else {\r\n                dom.oninput = onTextInputChange;\r\n                dom.oninput.wrapped = true;\r\n            }\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue(nextPropsOrEmpty, dom) {\r\n    var type = nextPropsOrEmpty.type;\r\n    var value = nextPropsOrEmpty.value;\r\n    var checked = nextPropsOrEmpty.checked;\r\n    var multiple = nextPropsOrEmpty.multiple;\r\n    var defaultValue = nextPropsOrEmpty.defaultValue;\r\n    var hasValue = !isNullOrUndef(value);\r\n    if (type && type !== dom.type) {\r\n        dom.setAttribute(\"type\", type);\r\n    }\r\n    if (multiple && multiple !== dom.multiple) {\r\n        dom.multiple = multiple;\r\n    }\r\n    if (!isNullOrUndef(defaultValue) && !hasValue) {\r\n        dom.defaultValue = defaultValue + \"\";\r\n    }\r\n    if (isCheckedType(type)) {\r\n        if (hasValue) {\r\n            dom.value = value;\r\n        }\r\n        if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n    else {\r\n        if (hasValue && dom.value !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n        else if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction updateChildOptionGroup(vNode, value) {\r\n    var type = vNode.type;\r\n    if (type === \"optgroup\") {\r\n        var children = vNode.children;\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOption(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOption(children, value);\r\n        }\r\n    }\r\n    else {\r\n        updateChildOption(vNode, value);\r\n    }\r\n}\r\nfunction updateChildOption(vNode, value) {\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    // we do this as multiple may have changed\r\n    dom.value = props.value;\r\n    if ((isArray(value) && value.indexOf(props.value) !== -1) ||\r\n        props.value === value) {\r\n        dom.selected = true;\r\n    }\r\n    else if (!isNullOrUndef(value) || !isNullOrUndef(props.selected)) {\r\n        dom.selected = props.selected || false;\r\n    }\r\n}\r\nfunction onSelectChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onChange) {\r\n        var event = props.onChange;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onchange) {\r\n        props.onchange(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$1(newVNode, dom, newProps, false);\r\n    }\r\n}\r\nfunction processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$1(vNode, dom, nextPropsOrEmpty, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.onchange = onSelectChange;\r\n            dom.onchange.wrapped = true;\r\n        }\r\n    }\r\n}\r\nfunction applyValue$1(vNode, dom, nextPropsOrEmpty, mounting) {\r\n    if (nextPropsOrEmpty.multiple !== dom.multiple) {\r\n        dom.multiple = nextPropsOrEmpty.multiple;\r\n    }\r\n    var children = vNode.children;\r\n    if (!isInvalid(children)) {\r\n        var value = nextPropsOrEmpty.value;\r\n        if (mounting && isNullOrUndef(value)) {\r\n            value = nextPropsOrEmpty.defaultValue;\r\n        }\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOptionGroup(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOptionGroup(children, value);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction wrappedOnChange$1(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onTextareaInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$2(newVNode, vNode.dom, false);\r\n    }\r\n}\r\nfunction processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$2(nextPropsOrEmpty, dom, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.oninput = onTextareaInputChange;\r\n            dom.oninput.wrapped = true;\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange$1;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue$2(nextPropsOrEmpty, dom, mounting) {\r\n    var value = nextPropsOrEmpty.value;\r\n    var domValue = dom.value;\r\n    if (isNullOrUndef(value)) {\r\n        if (mounting) {\r\n            var defaultValue = nextPropsOrEmpty.defaultValue;\r\n            if (!isNullOrUndef(defaultValue)) {\r\n                if (defaultValue !== domValue) {\r\n                    dom.defaultValue = defaultValue;\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n            else if (domValue !== \"\") {\r\n                dom.defaultValue = \"\";\r\n                dom.value = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        /* There is value so keep it controlled */\r\n        if (domValue !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * There is currently no support for switching same input between controlled and nonControlled\r\n * If that ever becomes a real issue, then re design controlled elements\r\n * Currently user must choose either controlled or non-controlled and stick with that\r\n */\r\nfunction processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    if ((flags & 512 /* InputElement */) > 0) {\r\n        processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    else if ((flags & 2048 /* SelectElement */) > 0) {\r\n        processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    else if ((flags & 1024 /* TextareaElement */) > 0) {\r\n        processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n}\r\nfunction isControlledFormElement(nextPropsOrEmpty) {\r\n    return nextPropsOrEmpty.type && isCheckedType(nextPropsOrEmpty.type)\r\n        ? !isNullOrUndef(nextPropsOrEmpty.checked)\r\n        : !isNullOrUndef(nextPropsOrEmpty.value);\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction normalizeChildNodes(parentDom) {\r\n    var dom = parentDom.firstChild;\r\n    while (dom) {\r\n        if (dom.nodeType === 8) {\r\n            if (dom.data === \"!\") {\r\n                var placeholder = document.createTextNode(\"\");\r\n                parentDom.replaceChild(placeholder, dom);\r\n                dom = dom.nextSibling;\r\n            }\r\n            else {\r\n                var lastDom = dom.previousSibling;\r\n                parentDom.removeChild(dom);\r\n                dom = lastDom || parentDom.firstChild;\r\n            }\r\n        }\r\n        else {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction hydrateComponent(vNode, dom, lifecycle, context, isSVG, isClass) {\r\n    var type = vNode.type;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    if (isClass) {\r\n        var _isSVG = dom.namespaceURI === svgNS;\r\n        var instance = createClassComponentInstance(vNode, type, props, context, _isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        hydrate(input, dom, lifecycle, instance._childContext, _isSVG);\r\n        vNode.dom = input.dom;\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false; // Mount finished allow going sync\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        hydrate(input$1, dom, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        vNode.dom = input$1.dom;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateElement(vNode, dom, lifecycle, context, isSVG) {\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var flags = vNode.flags;\r\n    var ref = vNode.ref;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n        if (false) {\r\n            warning(\"Inferno hydration: Server-side markup doesn't match client-side markup or Initial render target is not empty\");\r\n        }\r\n        var newDom = mountElement(vNode, null, lifecycle, context, isSVG);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        hydrateChildren(children, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (dom.firstChild !== null && !isSamePropsInnerHTML(dom, props)) {\r\n        dom.textContent = \"\"; // dom has content, but VNode has no children remove everything from DOM\r\n    }\r\n    if (props) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (!isNullOrUndef(className)) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    else {\r\n        if (dom.className !== \"\") {\r\n            dom.removeAttribute(\"class\");\r\n        }\r\n    }\r\n    if (ref) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateChildren(children, parentDom, lifecycle, context, isSVG) {\r\n    normalizeChildNodes(parentDom);\r\n    var dom = parentDom.firstChild;\r\n    if (isStringOrNumber(children)) {\r\n        if (!isNull(dom) && dom.nodeType === 3) {\r\n            if (dom.nodeValue !== children) {\r\n                dom.nodeValue = children;\r\n            }\r\n        }\r\n        else if (children === \"\") {\r\n            parentDom.appendChild(document.createTextNode(\"\"));\r\n        }\r\n        else {\r\n            parentDom.textContent = children;\r\n        }\r\n        if (!isNull(dom)) {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n    else if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isNull(child) && isObject(child)) {\r\n                if (!isNull(dom)) {\r\n                    var nextSibling = dom.nextSibling;\r\n                    hydrate(child, dom, lifecycle, context, isSVG);\r\n                    dom = nextSibling;\r\n                }\r\n                else {\r\n                    mount(child, parentDom, lifecycle, context, isSVG);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // It's VNode\r\n        if (!isNull(dom)) {\r\n            hydrate(children, dom, lifecycle, context, isSVG);\r\n            dom = dom.nextSibling;\r\n        }\r\n        else {\r\n            mount(children, parentDom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    // clear any other DOM nodes, there should be only a single entry for the root\r\n    while (dom) {\r\n        var nextSibling$1 = dom.nextSibling;\r\n        parentDom.removeChild(dom);\r\n        dom = nextSibling$1;\r\n    }\r\n}\r\nfunction hydrateText(vNode, dom) {\r\n    if (dom.nodeType !== 3) {\r\n        var newDom = mountText(vNode, null);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    var text = vNode.children;\r\n    if (dom.nodeValue !== text) {\r\n        dom.nodeValue = text;\r\n    }\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrateVoid(vNode, dom) {\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrate(vNode, dom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        hydrateComponent(vNode, dom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        hydrateElement(vNode, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        hydrateText(vNode, dom);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        hydrateVoid(vNode, dom);\r\n    }\r\n    else {\r\n        if (false) {\r\n            throwError((\"hydrate() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction hydrateRoot(input, parentDom, lifecycle) {\r\n    if (!isNull(parentDom)) {\r\n        var dom = parentDom.firstChild;\r\n        if (!isNull(dom)) {\r\n            hydrate(input, dom, lifecycle, EMPTY_OBJ, false);\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while ((dom = dom.nextSibling)) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar componentPools = new Map();\r\nvar elementPools = new Map();\r\nfunction recycleElement(vNode, lifecycle, context, isSVG) {\r\n    var tag = vNode.type;\r\n    var pools = elementPools.get(tag);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                patchElement(recycledVNode, vNode, null, lifecycle, context, isSVG, true);\r\n                return vNode.dom;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolElement(vNode) {\r\n    var tag = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = elementPools.get(tag);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        elementPools.set(tag, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nfunction recycleComponent(vNode, lifecycle, context, isSVG) {\r\n    var type = vNode.type;\r\n    var pools = componentPools.get(type);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                var flags = vNode.flags;\r\n                var failed = patchComponent(recycledVNode, vNode, null, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0, true);\r\n                if (!failed) {\r\n                    return vNode.dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolComponent(vNode) {\r\n    var hooks = vNode.ref;\r\n    var nonRecycleHooks = hooks &&\r\n        (hooks.onComponentWillMount ||\r\n            hooks.onComponentWillUnmount ||\r\n            hooks.onComponentDidMount ||\r\n            hooks.onComponentWillUpdate ||\r\n            hooks.onComponentDidUpdate);\r\n    if (nonRecycleHooks) {\r\n        return;\r\n    }\r\n    var type = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = componentPools.get(type);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        componentPools.set(type, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction unmount(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var flags = vNode.flags;\r\n    var dom = vNode.dom;\r\n    if (flags & 28 /* Component */) {\r\n        var instance = vNode.children;\r\n        var isStatefulComponent$$1 = (flags & 4 /* ComponentClass */) > 0;\r\n        var props = vNode.props || EMPTY_OBJ;\r\n        var ref = vNode.ref;\r\n        if (!isRecycling) {\r\n            if (isStatefulComponent$$1) {\r\n                if (!instance._unmounted) {\r\n                    if (!isNull(options.beforeUnmount)) {\r\n                        options.beforeUnmount(vNode);\r\n                    }\r\n                    if (!isUndefined(instance.componentWillUnmount)) {\r\n                        instance.componentWillUnmount();\r\n                    }\r\n                    if (ref && !isRecycling) {\r\n                        ref(null);\r\n                    }\r\n                    instance._unmounted = true;\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.delete(instance);\r\n                    }\r\n                    unmount(instance._lastInput, null, instance._lifecycle, false, isRecycling);\r\n                }\r\n            }\r\n            else {\r\n                if (!isNullOrUndef(ref)) {\r\n                    if (!isNullOrUndef(ref.onComponentWillUnmount)) {\r\n                        ref.onComponentWillUnmount(dom, props);\r\n                    }\r\n                }\r\n                unmount(instance, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        if (options.recyclingEnabled &&\r\n            !isStatefulComponent$$1 &&\r\n            (parentDom || canRecycle)) {\r\n            poolComponent(vNode);\r\n        }\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var ref$1 = vNode.ref;\r\n        var props$1 = vNode.props;\r\n        if (!isRecycling && isFunction(ref$1)) {\r\n            ref$1(null);\r\n        }\r\n        var children = vNode.children;\r\n        if (!isNullOrUndef(children)) {\r\n            if (isArray(children)) {\r\n                for (var i = 0, len = children.length; i < len; i++) {\r\n                    var child = children[i];\r\n                    if (!isInvalid(child) && isObject(child)) {\r\n                        unmount(child, null, lifecycle, false, isRecycling);\r\n                    }\r\n                }\r\n            }\r\n            else if (isObject(children)) {\r\n                unmount(children, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        if (!isNull(props$1)) {\r\n            for (var name in props$1) {\r\n                // do not add a hasOwnProperty check here, it affects performance\r\n                if (props$1[name] !== null && isAttrAnEvent(name)) {\r\n                    patchEvent(name, props$1[name], null, dom);\r\n                    // We need to set this null, because same props otherwise come back if SCU returns false and we are recyling\r\n                    props$1[name] = null;\r\n                }\r\n            }\r\n        }\r\n        if (options.recyclingEnabled && (parentDom || canRecycle)) {\r\n            poolElement(vNode);\r\n        }\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// rather than use a Map, like we did before, we can use an array here\r\n// given there shouldn't be THAT many roots on the page, the difference\r\n// in performance is huge: https://esbench.com/bench/5802a691330ab09900a1a2da\r\nvar componentToDOMNodeMap = new Map();\r\nvar roots = options.roots;\r\n/**\r\n * When inferno.options.findDOMNOdeEnabled is true, this function will return DOM Node by component instance\r\n * @param ref Component instance\r\n * @returns {*|null} returns dom node\r\n */\r\nfunction findDOMNode(ref) {\r\n    if (!options.findDOMNodeEnabled) {\r\n        if (false) {\r\n            throwError(\"findDOMNode() has been disabled, use Inferno.options.findDOMNodeEnabled = true; enabled findDOMNode(). Warning this can significantly impact performance!\");\r\n        }\r\n        throwError();\r\n    }\r\n    var dom = ref && ref.nodeType ? ref : null;\r\n    return componentToDOMNodeMap.get(ref) || dom;\r\n}\r\nfunction getRoot(dom) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        var root = roots[i];\r\n        if (root.dom === dom) {\r\n            return root;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction setRoot(dom, input, lifecycle) {\r\n    var root = {\r\n        dom: dom,\r\n        input: input,\r\n        lifecycle: lifecycle\r\n    };\r\n    roots.push(root);\r\n    return root;\r\n}\r\nfunction removeRoot(root) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        if (roots[i] === root) {\r\n            roots.splice(i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\nif (false) {\r\n    if (isBrowser && document.body === null) {\r\n        warning('Inferno warning: you cannot initialize inferno without \"document.body\". Wait on \"DOMContentLoaded\" event, add script to bottom of body, or use async/defer attributes on script tag.');\r\n    }\r\n}\r\nvar documentBody = isBrowser ? document.body : null;\r\n/**\r\n * Renders virtual node tree into parent node.\r\n * @param {VNode | null | string | number} input vNode to be rendered\r\n * @param parentDom DOM node which content will be replaced by virtual node\r\n * @returns {InfernoChildren} rendered virtual node\r\n */\r\nfunction render(input, parentDom) {\r\n    if (documentBody === parentDom) {\r\n        if (false) {\r\n            throwError('you cannot render() to the \"document.body\". Use an empty element as a container instead.');\r\n        }\r\n        throwError();\r\n    }\r\n    if (input === NO_OP) {\r\n        return;\r\n    }\r\n    var root = getRoot(parentDom);\r\n    if (isNull(root)) {\r\n        var lifecycle = new Lifecycle();\r\n        if (!isInvalid(input)) {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            if (!hydrateRoot(input, parentDom, lifecycle)) {\r\n                mount(input, parentDom, lifecycle, EMPTY_OBJ, false);\r\n            }\r\n            root = setRoot(parentDom, input, lifecycle);\r\n            lifecycle.trigger();\r\n        }\r\n    }\r\n    else {\r\n        var lifecycle$1 = root.lifecycle;\r\n        lifecycle$1.listeners = [];\r\n        if (isNullOrUndef(input)) {\r\n            unmount(root.input, parentDom, lifecycle$1, false, false);\r\n            removeRoot(root);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            patch(root.input, input, parentDom, lifecycle$1, EMPTY_OBJ, false, false);\r\n        }\r\n        root.input = input;\r\n        lifecycle$1.trigger();\r\n    }\r\n    if (root) {\r\n        var rootInput = root.input;\r\n        if (rootInput && rootInput.flags & 28 /* Component */) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n}\r\nfunction createRenderer(parentDom) {\r\n    return function renderer(lastInput, nextInput) {\r\n        if (!parentDom) {\r\n            parentDom = lastInput;\r\n        }\r\n        render(nextInput, parentDom);\r\n    };\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction patch(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    if (lastVNode !== nextVNode) {\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        if (nextFlags & 28 /* Component */) {\r\n            var isClass = (nextFlags & 4 /* ComponentClass */) > 0;\r\n            if (lastFlags & 28 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, isClass), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 3970 /* Element */) {\r\n            if (lastFlags & 3970 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountElement(nextVNode, null, lifecycle, context, isSVG), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 1 /* Text */) {\r\n            if (lastFlags & 1 /* Text */) {\r\n                patchText(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountText(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 4096 /* Void */) {\r\n            if (lastFlags & 4096 /* Void */) {\r\n                patchVoid(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountVoid(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            // Error case: mount new one replacing old one\r\n            replaceLastChildAndUnmount(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction unmountChildren(children, dom, lifecycle, isRecycling) {\r\n    if (isVNode(children)) {\r\n        unmount(children, dom, lifecycle, true, isRecycling);\r\n    }\r\n    else if (isArray(children)) {\r\n        removeAllChildren(dom, children, lifecycle, isRecycling);\r\n    }\r\n    else {\r\n        dom.textContent = \"\";\r\n    }\r\n}\r\nfunction patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    var nextTag = nextVNode.type;\r\n    var lastTag = lastVNode.type;\r\n    if (lastTag !== nextTag) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    else {\r\n        var dom = lastVNode.dom;\r\n        var lastProps = lastVNode.props;\r\n        var nextProps = nextVNode.props;\r\n        var lastChildren = lastVNode.children;\r\n        var nextChildren = nextVNode.children;\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        var nextRef = nextVNode.ref;\r\n        var lastClassName = lastVNode.className;\r\n        var nextClassName = nextVNode.className;\r\n        nextVNode.dom = dom;\r\n        isSVG = isSVG || (nextFlags & 128 /* SvgElement */) > 0;\r\n        if (lastChildren !== nextChildren) {\r\n            var childrenIsSVG = isSVG === true && nextVNode.type !== \"foreignObject\";\r\n            patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, childrenIsSVG, isRecycling);\r\n        }\r\n        // inlined patchProps  -- starts --\r\n        if (lastProps !== nextProps) {\r\n            var lastPropsOrEmpty = lastProps || EMPTY_OBJ;\r\n            var nextPropsOrEmpty = nextProps || EMPTY_OBJ;\r\n            var hasControlledValue = false;\r\n            if (nextPropsOrEmpty !== EMPTY_OBJ) {\r\n                var isFormElement = (nextFlags & 3584 /* FormElement */) > 0;\r\n                if (isFormElement) {\r\n                    hasControlledValue = isControlledFormElement(nextPropsOrEmpty);\r\n                }\r\n                for (var prop in nextPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    var nextValue = nextPropsOrEmpty[prop];\r\n                    var lastValue = lastPropsOrEmpty[prop];\r\n                    patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue);\r\n                }\r\n                if (isFormElement) {\r\n                    // When inferno is recycling form element, we need to process it like it would be mounting\r\n                    processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, isRecycling, hasControlledValue);\r\n                }\r\n            }\r\n            if (lastPropsOrEmpty !== EMPTY_OBJ) {\r\n                for (var prop$1 in lastPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    if (isNullOrUndef(nextPropsOrEmpty[prop$1]) &&\r\n                        !isNullOrUndef(lastPropsOrEmpty[prop$1])) {\r\n                        removeProp(prop$1, lastPropsOrEmpty[prop$1], dom, nextFlags);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inlined patchProps  -- ends --\r\n        if (lastClassName !== nextClassName) {\r\n            if (isNullOrUndef(nextClassName)) {\r\n                dom.removeAttribute(\"class\");\r\n            }\r\n            else {\r\n                if (isSVG) {\r\n                    dom.setAttribute(\"class\", nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n        }\r\n        if (nextRef) {\r\n            if (lastVNode.ref !== nextRef || isRecycling) {\r\n                mountRef(dom, nextRef, lifecycle);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var patchArray = false;\r\n    var patchKeyed = false;\r\n    if (nextFlags & 64 /* HasNonKeyedChildren */) {\r\n        patchArray = true;\r\n    }\r\n    else if ((lastFlags & 32 /* HasKeyedChildren */) > 0 &&\r\n        (nextFlags & 32 /* HasKeyedChildren */) > 0) {\r\n        patchKeyed = true;\r\n        patchArray = true;\r\n    }\r\n    else if (isInvalid(nextChildren)) {\r\n        unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n    }\r\n    else if (isInvalid(lastChildren)) {\r\n        if (isStringOrNumber(nextChildren)) {\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            if (isArray(nextChildren)) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n            else {\r\n                mount(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n    }\r\n    else if (isStringOrNumber(nextChildren)) {\r\n        if (isStringOrNumber(lastChildren)) {\r\n            updateTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n    }\r\n    else if (isArray(nextChildren)) {\r\n        if (isArray(lastChildren)) {\r\n            patchArray = true;\r\n            if (isKeyed(lastChildren, nextChildren)) {\r\n                patchKeyed = true;\r\n            }\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    else if (isArray(lastChildren)) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        mount(nextChildren, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (isVNode(nextChildren)) {\r\n        if (isVNode(lastChildren)) {\r\n            patch(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mount(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (patchArray) {\r\n        var lastLength = lastChildren.length;\r\n        var nextLength = nextChildren.length;\r\n        // Fast path's for both algorithms\r\n        if (lastLength === 0) {\r\n            if (nextLength > 0) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n        else if (nextLength === 0) {\r\n            removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        }\r\n        else if (patchKeyed) {\r\n            patchKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastLength, nextLength);\r\n        }\r\n        else {\r\n            patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastLength, nextLength);\r\n        }\r\n    }\r\n}\r\nfunction patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling) {\r\n    var lastType = lastVNode.type;\r\n    var nextType = nextVNode.type;\r\n    var lastKey = lastVNode.key;\r\n    var nextKey = nextVNode.key;\r\n    if (lastType !== nextType || lastKey !== nextKey) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        return false;\r\n    }\r\n    else {\r\n        var nextProps = nextVNode.props || EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = lastVNode.children;\r\n            instance._updating = true;\r\n            if (instance._unmounted) {\r\n                if (isNull(parentDom)) {\r\n                    return true;\r\n                }\r\n                replaceChild(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, (nextVNode.flags & 4 /* ComponentClass */) > 0), lastVNode.dom);\r\n            }\r\n            else {\r\n                var hasComponentDidUpdate = !isUndefined(instance.componentDidUpdate);\r\n                var nextState = instance.state;\r\n                // When component has componentDidUpdate hook, we need to clone lastState or will be modified by reference during update\r\n                var lastState = hasComponentDidUpdate\r\n                    ? combineFrom(nextState, null)\r\n                    : nextState;\r\n                var lastProps = instance.props;\r\n                nextVNode.children = instance;\r\n                instance._isSVG = isSVG;\r\n                var lastInput = instance._lastInput;\r\n                var nextInput = instance._updateComponent(lastState, nextState, lastProps, nextProps, context, false, false);\r\n                // If this component was destroyed by its parent do nothing, this is no-op\r\n                // It can happen by using external callback etc during render / update\r\n                if (instance._unmounted) {\r\n                    return false;\r\n                }\r\n                var didUpdate = true;\r\n                // Update component before getting child context\r\n                var childContext;\r\n                if (!isNullOrUndef(instance.getChildContext)) {\r\n                    childContext = instance.getChildContext();\r\n                }\r\n                if (isNullOrUndef(childContext)) {\r\n                    childContext = context;\r\n                }\r\n                else {\r\n                    childContext = combineFrom(context, childContext);\r\n                }\r\n                instance._childContext = childContext;\r\n                if (isInvalid(nextInput)) {\r\n                    nextInput = createVoidVNode();\r\n                }\r\n                else if (nextInput === NO_OP) {\r\n                    nextInput = lastInput;\r\n                    didUpdate = false;\r\n                }\r\n                else if (isStringOrNumber(nextInput)) {\r\n                    nextInput = createTextVNode(nextInput, null);\r\n                }\r\n                else if (isArray(nextInput)) {\r\n                    if (false) {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput)) {\r\n                    if (!isNull(nextInput.dom)) {\r\n                        nextInput = directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput.flags & 28 /* Component */) {\r\n                    nextInput.parentVNode = nextVNode;\r\n                }\r\n                else if (lastInput.flags & 28 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n                instance._lastInput = nextInput;\r\n                instance._vNode = nextVNode;\r\n                if (didUpdate) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, childContext, isSVG, isRecycling);\r\n                    if (hasComponentDidUpdate && instance.componentDidUpdate) {\r\n                        instance.componentDidUpdate(lastProps, lastState);\r\n                    }\r\n                    if (!isNull(options.afterUpdate)) {\r\n                        options.afterUpdate(nextVNode);\r\n                    }\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.set(instance, nextInput.dom);\r\n                    }\r\n                }\r\n                nextVNode.dom = nextInput.dom;\r\n            }\r\n            instance._updating = false;\r\n        }\r\n        else {\r\n            var shouldUpdate = true;\r\n            var lastProps$1 = lastVNode.props;\r\n            var nextHooks = nextVNode.ref;\r\n            var nextHooksDefined = !isNullOrUndef(nextHooks);\r\n            var lastInput$1 = lastVNode.children;\r\n            var nextInput$1 = lastInput$1;\r\n            nextVNode.dom = lastVNode.dom;\r\n            nextVNode.children = lastInput$1;\r\n            if (lastKey !== nextKey) {\r\n                shouldUpdate = true;\r\n            }\r\n            else {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps$1, nextProps);\r\n                }\r\n            }\r\n            if (shouldUpdate !== false) {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentWillUpdate)) {\r\n                    nextHooks.onComponentWillUpdate(lastProps$1, nextProps);\r\n                }\r\n                nextInput$1 = nextType(nextProps, context);\r\n                if (isInvalid(nextInput$1)) {\r\n                    nextInput$1 = createVoidVNode();\r\n                }\r\n                else if (isStringOrNumber(nextInput$1) && nextInput$1 !== NO_OP) {\r\n                    nextInput$1 = createTextVNode(nextInput$1, null);\r\n                }\r\n                else if (isArray(nextInput$1)) {\r\n                    if (false) {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput$1)) {\r\n                    if (!isNull(nextInput$1.dom)) {\r\n                        nextInput$1 = directClone(nextInput$1);\r\n                    }\r\n                }\r\n                if (nextInput$1 !== NO_OP) {\r\n                    patch(lastInput$1, nextInput$1, parentDom, lifecycle, context, isSVG, isRecycling);\r\n                    nextVNode.children = nextInput$1;\r\n                    if (nextHooksDefined &&\r\n                        !isNullOrUndef(nextHooks.onComponentDidUpdate)) {\r\n                        nextHooks.onComponentDidUpdate(lastProps$1, nextProps);\r\n                    }\r\n                    nextVNode.dom = nextInput$1.dom;\r\n                }\r\n            }\r\n            if (nextInput$1.flags & 28 /* Component */) {\r\n                nextInput$1.parentVNode = nextVNode;\r\n            }\r\n            else if (lastInput$1.flags & 28 /* Component */) {\r\n                lastInput$1.parentVNode = nextVNode;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction patchText(lastVNode, nextVNode) {\r\n    var nextText = nextVNode.children;\r\n    var dom = lastVNode.dom;\r\n    nextVNode.dom = dom;\r\n    if (lastVNode.children !== nextText) {\r\n        dom.nodeValue = nextText;\r\n    }\r\n}\r\nfunction patchVoid(lastVNode, nextVNode) {\r\n    nextVNode.dom = lastVNode.dom;\r\n}\r\nfunction patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastChildrenLength, nextChildrenLength) {\r\n    var commonLength = lastChildrenLength > nextChildrenLength\r\n        ? nextChildrenLength\r\n        : lastChildrenLength;\r\n    var i = 0;\r\n    for (; i < commonLength; i++) {\r\n        var nextChild = nextChildren[i];\r\n        if (nextChild.dom) {\r\n            nextChild = nextChildren[i] = directClone(nextChild);\r\n        }\r\n        patch(lastChildren[i], nextChild, dom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    if (lastChildrenLength < nextChildrenLength) {\r\n        for (i = commonLength; i < nextChildrenLength; i++) {\r\n            var nextChild$1 = nextChildren[i];\r\n            if (nextChild$1.dom) {\r\n                nextChild$1 = nextChildren[i] = directClone(nextChild$1);\r\n            }\r\n            appendChild(dom, mount(nextChild$1, null, lifecycle, context, isSVG));\r\n        }\r\n    }\r\n    else if (lastChildrenLength > nextChildrenLength) {\r\n        for (i = commonLength; i < lastChildrenLength; i++) {\r\n            unmount(lastChildren[i], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchKeyedChildren(a, b, dom, lifecycle, context, isSVG, isRecycling, aLength, bLength) {\r\n    var aEnd = aLength - 1;\r\n    var bEnd = bLength - 1;\r\n    var aStart = 0;\r\n    var bStart = 0;\r\n    var i;\r\n    var j;\r\n    var aNode;\r\n    var bNode;\r\n    var nextNode;\r\n    var nextPos;\r\n    var node;\r\n    var aStartNode = a[aStart];\r\n    var bStartNode = b[bStart];\r\n    var aEndNode = a[aEnd];\r\n    var bEndNode = b[bEnd];\r\n    if (bStartNode.dom) {\r\n        b[bStart] = bStartNode = directClone(bStartNode);\r\n    }\r\n    if (bEndNode.dom) {\r\n        b[bEnd] = bEndNode = directClone(bEndNode);\r\n    }\r\n    // Step 1\r\n    // tslint:disable-next-line\r\n    outer: {\r\n        // Sync nodes with the same key at the beginning.\r\n        while (aStartNode.key === bStartNode.key) {\r\n            patch(aStartNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aStart++;\r\n            bStart++;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aStartNode = a[aStart];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n        }\r\n        // Sync nodes with the same key at the end.\r\n        while (aEndNode.key === bEndNode.key) {\r\n            patch(aEndNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aEnd--;\r\n            bEnd--;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aEndNode = a[aEnd];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n        }\r\n    }\r\n    if (aStart > aEnd) {\r\n        if (bStart <= bEnd) {\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < bLength ? b[nextPos].dom : null;\r\n            while (bStart <= bEnd) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n            }\r\n        }\r\n    }\r\n    else if (bStart > bEnd) {\r\n        while (aStart <= aEnd) {\r\n            unmount(a[aStart++], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    else {\r\n        var aLeft = aEnd - aStart + 1;\r\n        var bLeft = bEnd - bStart + 1;\r\n        var sources = new Array(bLeft);\r\n        // Mark all nodes as inserted.\r\n        for (i = 0; i < bLeft; i++) {\r\n            sources[i] = -1;\r\n        }\r\n        var moved = false;\r\n        var pos = 0;\r\n        var patched = 0;\r\n        // When sizes are small, just loop them through\r\n        if (bLeft <= 4 || aLeft * bLeft <= 16) {\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLeft) {\r\n                    for (j = bStart; j <= bEnd; j++) {\r\n                        bNode = b[j];\r\n                        if (aNode.key === bNode.key) {\r\n                            sources[j - bStart] = i;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                            patched++;\r\n                            a[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var keyIndex = new Map();\r\n            // Map keys by their index in array\r\n            for (i = bStart; i <= bEnd; i++) {\r\n                keyIndex.set(b[i].key, i);\r\n            }\r\n            // Try to patch same keys\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLeft) {\r\n                    j = keyIndex.get(aNode.key);\r\n                    if (!isUndefined(j)) {\r\n                        bNode = b[j];\r\n                        sources[j - bStart] = i;\r\n                        if (pos > j) {\r\n                            moved = true;\r\n                        }\r\n                        else {\r\n                            pos = j;\r\n                        }\r\n                        if (bNode.dom) {\r\n                            b[j] = bNode = directClone(bNode);\r\n                        }\r\n                        patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                        patched++;\r\n                        a[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // fast-path: if nothing patched remove all old and add all new\r\n        if (aLeft === aLength && patched === 0) {\r\n            removeAllChildren(dom, a, lifecycle, isRecycling);\r\n            while (bStart < bLeft) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), null);\r\n            }\r\n        }\r\n        else {\r\n            i = aLeft - patched;\r\n            while (i > 0) {\r\n                aNode = a[aStart++];\r\n                if (!isNull(aNode)) {\r\n                    unmount(aNode, dom, lifecycle, true, isRecycling);\r\n                    i--;\r\n                }\r\n            }\r\n            if (moved) {\r\n                var seq = lis_algorithm(sources);\r\n                j = seq.length - 1;\r\n                for (i = bLeft - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                    }\r\n                    else {\r\n                        if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            node = b[pos];\r\n                            nextPos = pos + 1;\r\n                            insertOrAppend(dom, node.dom, nextPos < bLength ? b[nextPos].dom : null);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (patched !== bLeft) {\r\n                // when patched count doesn't match b length we need to insert those new ones\r\n                // loop backwards so we can use insertBefore\r\n                for (i = bLeft - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction lis_algorithm(arr) {\r\n    var p = arr.slice(0);\r\n    var result = [0];\r\n    var i;\r\n    var j;\r\n    var u;\r\n    var v;\r\n    var c;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        var arrI = arr[i];\r\n        if (arrI !== -1) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\r\nfunction isAttrAnEvent(attr) {\r\n    return attr[0] === \"o\" && attr[1] === \"n\";\r\n}\r\nfunction patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue) {\r\n    if (lastValue !== nextValue) {\r\n        if (skipProps.has(prop) || (hasControlledValue && prop === \"value\")) {\r\n            return;\r\n        }\r\n        else if (booleanProps.has(prop)) {\r\n            prop = prop === \"autoFocus\" ? prop.toLowerCase() : prop;\r\n            dom[prop] = !!nextValue;\r\n        }\r\n        else if (strictProps.has(prop)) {\r\n            var value = isNullOrUndef(nextValue) ? \"\" : nextValue;\r\n            if (dom[prop] !== value) {\r\n                dom[prop] = value;\r\n            }\r\n        }\r\n        else if (isAttrAnEvent(prop)) {\r\n            patchEvent(prop, lastValue, nextValue, dom);\r\n        }\r\n        else if (isNullOrUndef(nextValue)) {\r\n            dom.removeAttribute(prop);\r\n        }\r\n        else if (prop === \"style\") {\r\n            patchStyle(lastValue, nextValue, dom);\r\n        }\r\n        else if (prop === \"dangerouslySetInnerHTML\") {\r\n            var lastHtml = lastValue && lastValue.__html;\r\n            var nextHtml = nextValue && nextValue.__html;\r\n            if (lastHtml !== nextHtml) {\r\n                if (!isNullOrUndef(nextHtml) && !isSameInnerHTML(dom, nextHtml)) {\r\n                    dom.innerHTML = nextHtml;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // We optimize for NS being boolean. Its 99.9% time false\r\n            if (isSVG && namespaces.has(prop)) {\r\n                // If we end up in this path we can read property again\r\n                dom.setAttributeNS(namespaces.get(prop), prop, nextValue);\r\n            }\r\n            else {\r\n                dom.setAttribute(prop, nextValue);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchEvent(name, lastValue, nextValue, dom) {\r\n    if (lastValue !== nextValue) {\r\n        if (delegatedEvents.has(name)) {\r\n            handleEvent(name, lastValue, nextValue, dom);\r\n        }\r\n        else {\r\n            var nameLowerCase = name.toLowerCase();\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (domEvent && domEvent.wrapped) {\r\n                return;\r\n            }\r\n            if (!isFunction(nextValue) && !isNullOrUndef(nextValue)) {\r\n                var linkEvent = nextValue.event;\r\n                if (linkEvent && isFunction(linkEvent)) {\r\n                    dom[nameLowerCase] = function (e) {\r\n                        linkEvent(nextValue.data, e);\r\n                    };\r\n                }\r\n                else {\r\n                    if (false) {\r\n                        throwError((\"an event on a VNode \\\"\" + name + \"\\\". was not a function or a valid linkEvent.\"));\r\n                    }\r\n                    throwError();\r\n                }\r\n            }\r\n            else {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n// We are assuming here that we come from patchProp routine\r\n// -nextAttrValue cannot be null or undefined\r\nfunction patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n    var domStyle = dom.style;\r\n    var style;\r\n    var value;\r\n    if (isString(nextAttrValue)) {\r\n        domStyle.cssText = nextAttrValue;\r\n        return;\r\n    }\r\n    if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\r\n        for (style in nextAttrValue) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            value = nextAttrValue[style];\r\n            if (value !== lastAttrValue[style]) {\r\n                domStyle[style] =\r\n                    !isNumber(value) || isUnitlessNumber.has(style)\r\n                        ? value\r\n                        : value + \"px\";\r\n            }\r\n        }\r\n        for (style in lastAttrValue) {\r\n            if (isNullOrUndef(nextAttrValue[style])) {\r\n                domStyle[style] = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (style in nextAttrValue) {\r\n            value = nextAttrValue[style];\r\n            domStyle[style] =\r\n                !isNumber(value) || isUnitlessNumber.has(style) ? value : value + \"px\";\r\n        }\r\n    }\r\n}\r\nfunction removeProp(prop, lastValue, dom, nextFlags) {\r\n    if (prop === \"value\") {\r\n        // When removing value of select element, it needs to be set to null instead empty string, because empty string is valid value for option which makes that option selected\r\n        // MS IE/Edge don't follow html spec for textArea and input elements and we need to set empty string to value in those cases to avoid \"null\" and \"undefined\" texts\r\n        dom.value = nextFlags & 2048 /* SelectElement */ ? null : \"\";\r\n    }\r\n    else if (prop === \"style\") {\r\n        dom.removeAttribute(\"style\");\r\n    }\r\n    else if (isAttrAnEvent(prop)) {\r\n        handleEvent(prop, lastValue, null, dom);\r\n    }\r\n    else {\r\n        dom.removeAttribute(prop);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction mount(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 3970 /* Element */) {\r\n        return mountElement(vNode, parentDom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 28 /* Component */) {\r\n        return mountComponent(vNode, parentDom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        return mountVoid(vNode, parentDom);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        return mountText(vNode, parentDom);\r\n    }\r\n    else {\r\n        if (false) {\r\n            if (typeof vNode === \"object\") {\r\n                throwError((\"mount() received an object that's not a valid VNode, you should stringify it first. Object: \\\"\" + (JSON.stringify(vNode)) + \"\\\".\"));\r\n            }\r\n            else {\r\n                throwError((\"mount() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n            }\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction mountText(vNode, parentDom) {\r\n    var dom = document.createTextNode(vNode.children);\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountVoid(vNode, parentDom) {\r\n    var dom = document.createTextNode(\"\");\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountElement(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleElement(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var flags = vNode.flags;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    dom = documentCreateElement(vNode.type, isSVG);\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        if (isStringOrNumber(children)) {\r\n            setTextContent(dom, children);\r\n        }\r\n        else {\r\n            var childrenIsSVG = isSVG === true && vNode.type !== \"foreignObject\";\r\n            if (isArray(children)) {\r\n                mountArrayChildren(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n            else if (isVNode(children)) {\r\n                mount(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(props)) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (className !== null) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (!isNull(ref)) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountArrayChildren(children, dom, lifecycle, context, isSVG) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        // Verify can string/number be here. might cause de-opt. - Normalization takes care of it.\r\n        if (!isInvalid(child)) {\r\n            if (child.dom) {\r\n                children[i] = child = directClone(child);\r\n            }\r\n            mount(children[i], dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n}\r\nfunction mountComponent(vNode, parentDom, lifecycle, context, isSVG, isClass) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleComponent(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var type = vNode.type;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    if (isClass) {\r\n        var instance = createClassComponentInstance(vNode, type, props, context, isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        vNode.dom = dom = mount(input, null, lifecycle, instance._childContext, isSVG);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false;\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        vNode.dom = dom = mount(input$1, null, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nfunction mountClassComponentCallbacks(vNode, ref, instance, lifecycle) {\r\n    if (ref) {\r\n        if (isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        else {\r\n            if (false) {\r\n                if (isStringOrNumber(ref)) {\r\n                    throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n                }\r\n                else if (isObject(ref) && vNode.flags & 4 /* ComponentClass */) {\r\n                    throwError(\"functional component lifecycle events are not supported on ES2015 class components.\");\r\n                }\r\n                else {\r\n                    throwError((\"a bad value for \\\"ref\\\" was used on component: \\\"\" + (JSON.stringify(ref)) + \"\\\"\"));\r\n                }\r\n            }\r\n            throwError();\r\n        }\r\n    }\r\n    var hasDidMount = !isUndefined(instance.componentDidMount);\r\n    var afterMount = options.afterMount;\r\n    if (hasDidMount || !isNull(afterMount)) {\r\n        lifecycle.addListener((function () {\r\n            instance._updating = true;\r\n            if (afterMount) {\r\n                afterMount(vNode);\r\n            }\r\n            if (hasDidMount) {\r\n                instance.componentDidMount();\r\n            }\r\n            instance._updating = false;\r\n        }));\r\n    }\r\n}\r\nfunction mountFunctionalComponentCallbacks(props, ref, dom, lifecycle) {\r\n    if (ref) {\r\n        if (!isNullOrUndef(ref.onComponentWillMount)) {\r\n            ref.onComponentWillMount(props);\r\n        }\r\n        if (!isNullOrUndef(ref.onComponentDidMount)) {\r\n            lifecycle.addListener((function () { return ref.onComponentDidMount(dom, props); }));\r\n        }\r\n    }\r\n}\r\nfunction mountRef(dom, value, lifecycle) {\r\n    if (isFunction(value)) {\r\n        lifecycle.addListener((function () { return value(dom); }));\r\n    }\r\n    else {\r\n        if (isInvalid(value)) {\r\n            return;\r\n        }\r\n        if (false) {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// We need EMPTY_OBJ defined in one place.\r\n// Its used for comparison so we cant inline it into shared\r\nvar EMPTY_OBJ = {};\r\nif (false) {\r\n    Object.freeze(EMPTY_OBJ);\r\n}\r\nfunction createClassComponentInstance(vNode, Component, props, context, isSVG, lifecycle) {\r\n    if (isUndefined(context)) {\r\n        context = EMPTY_OBJ; // Context should not be mutable\r\n    }\r\n    var instance = new Component(props, context);\r\n    vNode.children = instance;\r\n    instance._blockSetState = false;\r\n    instance.context = context;\r\n    if (instance.props === EMPTY_OBJ) {\r\n        instance.props = props;\r\n    }\r\n    // setState callbacks must fire after render is done when called from componentWillReceiveProps or componentWillMount\r\n    instance._lifecycle = lifecycle;\r\n    instance._unmounted = false;\r\n    instance._isSVG = isSVG;\r\n    if (!isNullOrUndef(instance.componentWillMount)) {\r\n        instance._blockRender = true;\r\n        instance.componentWillMount();\r\n        if (instance._pendingSetState) {\r\n            var state = instance.state;\r\n            var pending = instance._pendingState;\r\n            if (state === null) {\r\n                instance.state = pending;\r\n            }\r\n            else {\r\n                for (var key in pending) {\r\n                    state[key] = pending[key];\r\n                }\r\n            }\r\n            instance._pendingSetState = false;\r\n            instance._pendingState = null;\r\n        }\r\n        instance._blockRender = false;\r\n    }\r\n    var childContext;\r\n    if (!isNullOrUndef(instance.getChildContext)) {\r\n        childContext = instance.getChildContext();\r\n    }\r\n    if (isNullOrUndef(childContext)) {\r\n        instance._childContext = context;\r\n    }\r\n    else {\r\n        instance._childContext = combineFrom(context, childContext);\r\n    }\r\n    if (!isNull(options.beforeRender)) {\r\n        options.beforeRender(instance);\r\n    }\r\n    var input = instance.render(props, instance.state, context);\r\n    if (!isNull(options.afterRender)) {\r\n        options.afterRender(instance);\r\n    }\r\n    if (isArray(input)) {\r\n        if (false) {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    instance._lastInput = input;\r\n    return instance;\r\n}\r\nfunction replaceLastChildAndUnmount(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    replaceVNode(parentDom, mount(nextInput, null, lifecycle, context, isSVG), lastInput, lifecycle, isRecycling);\r\n}\r\nfunction replaceVNode(parentDom, dom, vNode, lifecycle, isRecycling) {\r\n    unmount(vNode, null, lifecycle, false, isRecycling);\r\n    replaceChild(parentDom, dom, vNode.dom);\r\n}\r\nfunction createFunctionalComponentInput(vNode, component, props, context) {\r\n    var input = component(props, context);\r\n    if (isArray(input)) {\r\n        if (false) {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    return input;\r\n}\r\nfunction setTextContent(dom, text) {\r\n    if (text !== \"\") {\r\n        dom.textContent = text;\r\n    }\r\n    else {\r\n        dom.appendChild(document.createTextNode(\"\"));\r\n    }\r\n}\r\nfunction updateTextContent(dom, text) {\r\n    var textNode = dom.firstChild;\r\n    // Guard against external change on DOM node.\r\n    if (isNull(textNode)) {\r\n        setTextContent(dom, text);\r\n    }\r\n    else {\r\n        textNode.nodeValue = text;\r\n    }\r\n}\r\nfunction appendChild(parentDom, dom) {\r\n    parentDom.appendChild(dom);\r\n}\r\nfunction insertOrAppend(parentDom, newNode, nextNode) {\r\n    if (isNullOrUndef(nextNode)) {\r\n        appendChild(parentDom, newNode);\r\n    }\r\n    else {\r\n        parentDom.insertBefore(newNode, nextNode);\r\n    }\r\n}\r\nfunction documentCreateElement(tag, isSVG) {\r\n    if (isSVG === true) {\r\n        return document.createElementNS(svgNS, tag);\r\n    }\r\n    else {\r\n        return document.createElement(tag);\r\n    }\r\n}\r\nfunction replaceWithNewNode(lastNode, nextNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    unmount(lastNode, null, lifecycle, false, isRecycling);\r\n    var dom = mount(nextNode, null, lifecycle, context, isSVG);\r\n    nextNode.dom = dom;\r\n    replaceChild(parentDom, dom, lastNode.dom);\r\n}\r\nfunction replaceChild(parentDom, newDom, lastDom) {\r\n    if (!parentDom) {\r\n        parentDom = lastDom.parentNode;\r\n    }\r\n    parentDom.replaceChild(newDom, lastDom);\r\n}\r\nfunction removeChild(parentDom, dom) {\r\n    parentDom.removeChild(dom);\r\n}\r\nfunction removeAllChildren(dom, children, lifecycle, isRecycling) {\r\n    if (!options.recyclingEnabled || (options.recyclingEnabled && !isRecycling)) {\r\n        removeChildren(null, children, lifecycle, isRecycling);\r\n    }\r\n    dom.textContent = \"\";\r\n}\r\nfunction removeChildren(dom, children, lifecycle, isRecycling) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        if (!isInvalid(child)) {\r\n            unmount(child, dom, lifecycle, true, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction isKeyed(lastChildren, nextChildren) {\r\n    return (nextChildren.length > 0 &&\r\n        !isNullOrUndef(nextChildren[0]) &&\r\n        !isNullOrUndef(nextChildren[0].key) &&\r\n        lastChildren.length > 0 &&\r\n        !isNullOrUndef(lastChildren[0]) &&\r\n        !isNullOrUndef(lastChildren[0].key));\r\n}\r\nfunction isSameInnerHTML(dom, innerHTML) {\r\n    var tempdom = document.createElement(\"i\");\r\n    tempdom.innerHTML = innerHTML;\r\n    return tempdom.innerHTML === dom.innerHTML;\r\n}\r\nfunction isSamePropsInnerHTML(dom, props) {\r\n    return Boolean(props &&\r\n        props.dangerouslySetInnerHTML &&\r\n        props.dangerouslySetInnerHTML.__html &&\r\n        isSameInnerHTML(dom, props.dangerouslySetInnerHTML.__html));\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Creates virtual node\r\n * @param {number} flags\r\n * @param {string|Function|null} type\r\n * @param {string|null=} className\r\n * @param {object=} children\r\n * @param {object=} props\r\n * @param {*=} key\r\n * @param {object|Function=} ref\r\n * @param {boolean=} noNormalise\r\n * @returns {VNode} returns new virtual node\r\n */\r\nfunction createVNode(flags, type, className, children, props, key, ref, noNormalise) {\r\n    if (flags & 16 /* ComponentUnknown */) {\r\n        flags = isStatefulComponent(type)\r\n            ? 4 /* ComponentClass */\r\n            : 8 /* ComponentFunction */;\r\n    }\r\n    var vNode = {\r\n        children: children === void 0 ? null : children,\r\n        className: className === void 0 ? null : className,\r\n        dom: null,\r\n        flags: flags,\r\n        key: key === void 0 ? null : key,\r\n        props: props === void 0 ? null : props,\r\n        ref: ref === void 0 ? null : ref,\r\n        type: type\r\n    };\r\n    if (noNormalise !== true) {\r\n        normalize(vNode);\r\n    }\r\n    if (options.createVNode !== null) {\r\n        options.createVNode(vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction directClone(vNodeToClone) {\r\n    var newVNode;\r\n    var flags = vNodeToClone.flags;\r\n    if (flags & 28 /* Component */) {\r\n        var props;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (isNull(propsToClone)) {\r\n            props = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, null, null, props, vNodeToClone.key, vNodeToClone.ref, true);\r\n        var newProps = newVNode.props;\r\n        var newChildren = newProps.children;\r\n        // we need to also clone component children that are in props\r\n        // as the children may also have been hoisted\r\n        if (newChildren) {\r\n            if (isArray(newChildren)) {\r\n                var len = newChildren.length;\r\n                if (len > 0) {\r\n                    var tmpArray = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        var child = newChildren[i];\r\n                        if (isStringOrNumber(child)) {\r\n                            tmpArray.push(child);\r\n                        }\r\n                        else if (!isInvalid(child) && isVNode(child)) {\r\n                            tmpArray.push(directClone(child));\r\n                        }\r\n                    }\r\n                    newProps.children = tmpArray;\r\n                }\r\n            }\r\n            else if (isVNode(newChildren)) {\r\n                newProps.children = directClone(newChildren);\r\n            }\r\n        }\r\n        newVNode.children = null;\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var children = vNodeToClone.children;\r\n        var props$1;\r\n        var propsToClone$1 = vNodeToClone.props;\r\n        if (propsToClone$1 === null) {\r\n            props$1 = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props$1 = {};\r\n            for (var key$1 in propsToClone$1) {\r\n                props$1[key$1] = propsToClone$1[key$1];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, children, props$1, vNodeToClone.key, vNodeToClone.ref, !children);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n    }\r\n    return newVNode;\r\n}\r\n/*\r\n directClone is preferred over cloneVNode and used internally also.\r\n This function makes Inferno backwards compatible.\r\n And can be tree-shaked by modern bundlers\r\n\r\n Would be nice to combine this with directClone but could not do it without breaking change\r\n */\r\n/**\r\n * Clones given virtual node by creating new instance of it\r\n * @param {VNode} vNodeToClone virtual node to be cloned\r\n * @param {Props=} props additional props for new virtual node\r\n * @param {...*} _children new children for new virtual node\r\n * @returns {VNode} new virtual node\r\n */\r\nfunction cloneVNode(vNodeToClone, props) {\n    var _children = [], len$2 = arguments.length - 2;\n    while ( len$2-- > 0 ) _children[ len$2 ] = arguments[ len$2 + 2 ];\n\r\n    var children = _children;\r\n    var childrenLen = _children.length;\r\n    if (childrenLen > 0 && !isUndefined(_children[0])) {\r\n        if (!props) {\r\n            props = {};\r\n        }\r\n        if (childrenLen === 1) {\r\n            children = _children[0];\r\n        }\r\n        if (!isUndefined(children)) {\r\n            props.children = children;\r\n        }\r\n    }\r\n    var newVNode;\r\n    if (isArray(vNodeToClone)) {\r\n        var tmpArray = [];\r\n        for (var i = 0, len = vNodeToClone.length; i < len; i++) {\r\n            tmpArray.push(directClone(vNodeToClone[i]));\r\n        }\r\n        newVNode = tmpArray;\r\n    }\r\n    else {\r\n        var flags = vNodeToClone.flags;\r\n        var className = vNodeToClone.className;\r\n        var key = vNodeToClone.key;\r\n        var ref = vNodeToClone.ref;\r\n        if (props) {\r\n            if (props.hasOwnProperty(\"className\")) {\r\n                className = props.className;\r\n            }\r\n            if (props.hasOwnProperty(\"ref\")) {\r\n                ref = props.ref;\r\n            }\r\n            if (props.hasOwnProperty(\"key\")) {\r\n                key = props.key;\r\n            }\r\n        }\r\n        if (flags & 28 /* Component */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, null, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, true);\r\n            var newProps = newVNode.props;\r\n            if (newProps) {\r\n                var newChildren = newProps.children;\r\n                // we need to also clone component children that are in props\r\n                // as the children may also have been hoisted\r\n                if (newChildren) {\r\n                    if (isArray(newChildren)) {\r\n                        var len$1 = newChildren.length;\r\n                        if (len$1 > 0) {\r\n                            var tmpArray$1 = [];\r\n                            for (var i$1 = 0; i$1 < len$1; i$1++) {\r\n                                var child = newChildren[i$1];\r\n                                if (isStringOrNumber(child)) {\r\n                                    tmpArray$1.push(child);\r\n                                }\r\n                                else if (!isInvalid(child) && isVNode(child)) {\r\n                                    tmpArray$1.push(directClone(child));\r\n                                }\r\n                            }\r\n                            newProps.children = tmpArray$1;\r\n                        }\r\n                    }\r\n                    else if (isVNode(newChildren)) {\r\n                        newProps.children = directClone(newChildren);\r\n                    }\r\n                }\r\n            }\r\n            newVNode.children = null;\r\n        }\r\n        else if (flags & 3970 /* Element */) {\r\n            children =\r\n                props && !isUndefined(props.children)\r\n                    ? props.children\r\n                    : vNodeToClone.children;\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, children, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, false);\r\n        }\r\n        else if (flags & 1 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, key);\r\n        }\r\n    }\r\n    return newVNode;\r\n}\r\nfunction createVoidVNode() {\r\n    return createVNode(4096 /* Void */, null);\r\n}\r\nfunction createTextVNode(text, key) {\r\n    return createVNode(1 /* Text */, null, null, text, null, key);\r\n}\r\nfunction isVNode(o) {\r\n    return !!o.flags;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction applyKey(key, vNode) {\r\n    vNode.key = key;\r\n    return vNode;\r\n}\r\nfunction applyKeyIfMissing(key, vNode) {\r\n    if (isNumber(key)) {\r\n        key = \".\" + key;\r\n    }\r\n    if (isNull(vNode.key) || vNode.key[0] === \".\") {\r\n        return applyKey(key, vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction applyKeyPrefix(key, vNode) {\r\n    vNode.key = key + vNode.key;\r\n    return vNode;\r\n}\r\nfunction _normalizeVNodes(nodes, result, index, currentKey) {\r\n    for (var len = nodes.length; index < len; index++) {\r\n        var n = nodes[index];\r\n        var key = currentKey + \".\" + index;\r\n        if (!isInvalid(n)) {\r\n            if (isArray(n)) {\r\n                _normalizeVNodes(n, result, 0, key);\r\n            }\r\n            else {\r\n                if (isStringOrNumber(n)) {\r\n                    n = createTextVNode(n, null);\r\n                }\r\n                else if ((isVNode(n) && n.dom) || (n.key && n.key[0] === \".\")) {\r\n                    n = directClone(n);\r\n                }\r\n                if (isNull(n.key) || n.key[0] === \".\") {\r\n                    n = applyKey(key, n);\r\n                }\r\n                else {\r\n                    n = applyKeyPrefix(currentKey, n);\r\n                }\r\n                result.push(n);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction normalizeVNodes(nodes) {\r\n    var newNodes;\r\n    // we assign $ which basically means we've flagged this array for future note\r\n    // if it comes back again, we need to clone it, as people are using it\r\n    // in an immutable way\r\n    // tslint:disable\r\n    if (nodes[\"$\"] === true) {\r\n        nodes = nodes.slice();\r\n    }\r\n    else {\r\n        nodes[\"$\"] = true;\r\n    }\r\n    // tslint:enable\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n        var n = nodes[i];\r\n        if (isInvalid(n) || isArray(n)) {\r\n            var result = (newNodes || nodes).slice(0, i);\r\n            _normalizeVNodes(nodes, result, i, \"\");\r\n            return result;\r\n        }\r\n        else if (isStringOrNumber(n)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, createTextVNode(n, null)));\r\n        }\r\n        else if ((isVNode(n) && n.dom !== null) ||\r\n            (isNull(n.key) && (n.flags & 64 /* HasNonKeyedChildren */) === 0)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n        else if (newNodes) {\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n    }\r\n    return newNodes || nodes;\r\n}\r\nfunction normalizeChildren(children) {\r\n    if (isArray(children)) {\r\n        return normalizeVNodes(children);\r\n    }\r\n    else if (isVNode(children) && children.dom !== null) {\r\n        return directClone(children);\r\n    }\r\n    return children;\r\n}\r\nfunction normalizeProps(vNode, props, children) {\r\n    if (vNode.flags & 3970 /* Element */) {\r\n        if (isNullOrUndef(children) && props.hasOwnProperty(\"children\")) {\r\n            vNode.children = props.children;\r\n        }\r\n        if (props.hasOwnProperty(\"className\")) {\r\n            vNode.className = props.className || null;\r\n            delete props.className;\r\n        }\r\n    }\r\n    if (props.hasOwnProperty(\"ref\")) {\r\n        vNode.ref = props.ref;\r\n        delete props.ref;\r\n    }\r\n    if (props.hasOwnProperty(\"key\")) {\r\n        vNode.key = props.key;\r\n        delete props.key;\r\n    }\r\n}\r\nfunction getFlagsForElementVnode(type) {\r\n    if (type === \"svg\") {\r\n        return 128 /* SvgElement */;\r\n    }\r\n    else if (type === \"input\") {\r\n        return 512 /* InputElement */;\r\n    }\r\n    else if (type === \"select\") {\r\n        return 2048 /* SelectElement */;\r\n    }\r\n    else if (type === \"textarea\") {\r\n        return 1024 /* TextareaElement */;\r\n    }\r\n    else if (type === \"media\") {\r\n        return 256 /* MediaElement */;\r\n    }\r\n    return 2 /* HtmlElement */;\r\n}\r\nfunction normalize(vNode) {\r\n    var props = vNode.props;\r\n    var children = vNode.children;\r\n    // convert a wrongly created type back to element\r\n    // Primitive node doesn't have defaultProps, only Component\r\n    if (vNode.flags & 28 /* Component */) {\r\n        // set default props\r\n        var type = vNode.type;\r\n        var defaultProps = type.defaultProps;\r\n        if (!isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = vNode.props = defaultProps; // Create new object if only defaultProps given\r\n            }\r\n            else {\r\n                for (var prop in defaultProps) {\r\n                    if (isUndefined(props[prop])) {\r\n                        props[prop] = defaultProps[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isString(type)) {\r\n            vNode.flags = getFlagsForElementVnode(type);\r\n            if (props && props.children) {\r\n                vNode.children = props.children;\r\n                children = props.children;\r\n            }\r\n        }\r\n    }\r\n    if (props) {\r\n        normalizeProps(vNode, props, children);\r\n        if (!isInvalid(props.children)) {\r\n            props.children = normalizeChildren(props.children);\r\n        }\r\n    }\r\n    if (!isInvalid(children)) {\r\n        vNode.children = normalizeChildren(children);\r\n    }\r\n    if (false) {\r\n        // This code will be stripped out from production CODE\r\n        // It helps users to track errors in their applications.\r\n        var verifyKeys = function (vNodes) {\r\n            var keyValues = vNodes.map((function (vnode) {\r\n                return vnode.key;\r\n            }));\r\n            keyValues.some((function (item, idx) {\r\n                var hasDuplicate = keyValues.indexOf(item) !== idx;\r\n                if (hasDuplicate) {\r\n                    warning(\"Inferno normalisation(...): Encountered two children with same key, all keys must be unique within its siblings. Duplicated key is:\" +\r\n                        item);\r\n                }\r\n                return hasDuplicate;\r\n            }));\r\n        };\r\n        if (vNode.children && Array.isArray(vNode.children)) {\r\n            verifyKeys(vNode.children);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Links given data to event as first parameter\r\n * @param {*} data data to be linked, it will be available in function as first parameter\r\n * @param {Function} event Function to be called when event occurs\r\n * @returns {{data: *, event: Function}}\r\n */\r\nfunction linkEvent(data, event) {\r\n    if (isFunction(event)) {\r\n        return { data: data, event: event };\r\n    }\r\n    return null; // Return null when event is invalid, to avoid creating unnecessary event handlers\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/* tslint:disable:object-literal-sort-keys */\r\nif (false) {\r\n    /* tslint:disable-next-line:no-empty */\r\n    var testFunc = function testFn() { };\r\n    if ((testFunc.name || testFunc.toString()).indexOf(\"testFn\") ===\r\n        -1) {\r\n        warning(\"It looks like you're using a minified copy of the development build \" +\r\n            \"of Inferno. When deploying Inferno apps to production, make sure to use \" +\r\n            \"the production build which skips development warnings and is faster. \" +\r\n            \"See http://infernojs.org for more details.\");\r\n    }\r\n}\r\nvar version = \"3.10.1\";\r\n// we duplicate it so it plays nicely with different module loading systems\r\nvar index = {\r\n    EMPTY_OBJ: EMPTY_OBJ,\r\n    NO_OP: NO_OP,\r\n    cloneVNode: cloneVNode,\r\n    createRenderer: createRenderer,\r\n    createVNode: createVNode,\r\n    findDOMNode: findDOMNode,\r\n    getFlagsForElementVnode: getFlagsForElementVnode,\r\n    internal_DOMNodeMap: componentToDOMNodeMap,\r\n    internal_isUnitlessNumber: isUnitlessNumber,\r\n    internal_normalize: normalize,\r\n    internal_patch: patch,\r\n    linkEvent: linkEvent,\r\n    options: options,\r\n    render: render,\r\n    version: version\r\n};\n\nexports['default'] = index;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO_OP = NO_OP;\nexports.cloneVNode = cloneVNode;\nexports.createRenderer = createRenderer;\nexports.createVNode = createVNode;\nexports.findDOMNode = findDOMNode;\nexports.getFlagsForElementVnode = getFlagsForElementVnode;\nexports.internal_DOMNodeMap = componentToDOMNodeMap;\nexports.internal_isUnitlessNumber = isUnitlessNumber;\nexports.internal_normalize = normalize;\nexports.internal_patch = patch;\nexports.linkEvent = linkEvent;\nexports.options = options;\nexports.render = render;\nexports.version = version;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_inferno__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inferno_component__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inferno_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_inferno_component__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_storm_lib_js__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__storms_app_base_spec_js__ = __webpack_require__(18);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var _class=function(_Component){_inherits(_class,_Component);function _class(props){_classCallCheck(this,_class);return _possibleConstructorReturn(this,(_class.__proto__||Object.getPrototypeOf(_class)).call(this,props));}_createClass(_class,[{key:'environment',value:function environment(){console.log('Environment starting up');}},{key:'componentDidMount',value:function componentDidMount(){var setState=this.setState.bind(this);Object(__WEBPACK_IMPORTED_MODULE_2__modules_storm_lib_js__[\"a\" /* SetupStorm */])(setState).then(function(){return setState({storm_set:true});}).catch(function(err){return console.log(err);});}},{key:'simTransition',value:function simTransition(){}},{key:'render',value:function render(){var _this2=this;var state=this.state;var setState=this.setState.bind(this);return Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(16,__WEBPACK_IMPORTED_MODULE_2__modules_storm_lib_js__[\"b\" /* Storm */],null,null,{'namespace':'app_base','spec':__WEBPACK_IMPORTED_MODULE_3__storms_app_base_spec_js__[\"a\" /* default */],'store':state,'params':{},'setStore':setState,'onInitialRender':function onInitialRender(){return _this2.environment();},'onError':function onError(field,error){return console.log(\"ERROR: \",field,error);},children:function children(store){//hey! try logging this store variable!\nreturn Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'p',null,['No more spaghetti state! The following are the props contained in the storm under the namespace, \"app_base\", in src/App.js:',Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),Object.keys(store).map(function(key){return[key,store[key]];}).join(', '),Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"In lue of more official docs, given the simplicity of the code, I suggest starting with App.js, then jumping into storms/app-base.js\",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"This file should give you the information needed to create a decent mental model of what is happening.\",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"This starter project uses \",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'a',null,'milligram.css',{'href':'https://milligram.io/','target':'_blank'}),\" via a cdn. \",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"To remove this, just remove lines 13-15 in index.html within /public\",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),'Happy hacking!',Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"P.S. The secret sauce is in modules/storm/lib.js\",Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'br'),\"It's kinda messy. If you have suggestions or ideas for modifications please reach out to me at funky_chicken@protonmail.com!\"],{'style':{margin:20}});}});}}]);return _class;}(__WEBPACK_IMPORTED_MODULE_1_inferno_component___default.a);/* harmony default export */ __webpack_exports__[\"a\"] = (_class);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = __webpack_require__(0);\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno-Component\r\n */ /** TypeDoc Comment */\r\n// Make sure u use EMPTY_OBJ from 'inferno', otherwise it'll be a different reference\r\nvar noOp = ERROR_MSG;\r\nif (false) {\r\n    noOp =\r\n        \"Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.\";\r\n}\r\nvar componentCallbackQueue = new Map();\r\nvar resolvedPromise = Promise.resolve();\r\nfunction addToQueue(component, force, callback) {\r\n    var queue = componentCallbackQueue.get(component);\r\n    if (queue === void 0) {\r\n        queue = [];\r\n        componentCallbackQueue.set(component, queue);\r\n        resolvedPromise.then((function () {\r\n            componentCallbackQueue.delete(component);\r\n            component._updating = true;\r\n            applyState(component, force, (function () {\r\n                for (var i = 0, len = queue.length; i < len; i++) {\r\n                    queue[i].call(component);\r\n                }\r\n            }));\r\n            component._updating = false;\r\n        }));\r\n    }\r\n    if (!isNullOrUndef(callback)) {\r\n        queue.push(callback);\r\n    }\r\n}\r\nfunction queueStateChanges(component, newState, callback) {\r\n    if (isFunction(newState)) {\r\n        newState = newState(component.state, component.props, component.context);\r\n    }\r\n    var pending = component._pendingState;\r\n    if (isNullOrUndef(pending)) {\r\n        component._pendingState = newState;\r\n    }\r\n    else {\r\n        for (var stateKey in newState) {\r\n            pending[stateKey] = newState[stateKey];\r\n        }\r\n    }\r\n    if (!component._pendingSetState && !component._blockRender) {\r\n        if (!component._updating) {\r\n            component._pendingSetState = true;\r\n            component._updating = true;\r\n            applyState(component, false, callback);\r\n            component._updating = false;\r\n        }\r\n        else {\r\n            addToQueue(component, false, callback);\r\n        }\r\n    }\r\n    else {\r\n        component._pendingSetState = true;\r\n        if (isFunction(callback) && component._blockRender) {\r\n            component._lifecycle.addListener(callback.bind(component));\r\n        }\r\n    }\r\n}\r\nfunction applyState(component, force, callback) {\r\n    if (component._unmounted) {\r\n        return;\r\n    }\r\n    if (force || !component._blockRender) {\r\n        component._pendingSetState = false;\r\n        var pendingState = component._pendingState;\r\n        var prevState = component.state;\r\n        var nextState = combineFrom(prevState, pendingState);\r\n        var props = component.props;\r\n        var context = component.context;\r\n        component._pendingState = null;\r\n        var nextInput;\r\n        var renderOutput = component._updateComponent(prevState, nextState, props, props, context, force, true);\r\n        var didUpdate = true;\r\n        if (isInvalid(renderOutput)) {\r\n            nextInput = inferno.createVNode(4096 /* Void */, null);\r\n        }\r\n        else if (renderOutput === NO_OP) {\r\n            nextInput = component._lastInput;\r\n            didUpdate = false;\r\n        }\r\n        else if (isStringOrNumber(renderOutput)) {\r\n            nextInput = inferno.createVNode(1 /* Text */, null, null, renderOutput);\r\n        }\r\n        else if (isArray(renderOutput)) {\r\n            if (false) {\r\n                throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n            }\r\n            return throwError();\r\n        }\r\n        else {\r\n            nextInput = renderOutput;\r\n        }\r\n        var lastInput = component._lastInput;\r\n        var vNode = component._vNode;\r\n        var parentDom = (lastInput.dom && lastInput.dom.parentNode) ||\r\n            (lastInput.dom = vNode.dom);\r\n        if (nextInput.flags & 28 /* Component */) {\r\n            nextInput.parentVNode = vNode;\r\n        }\r\n        component._lastInput = nextInput;\r\n        if (didUpdate) {\r\n            var childContext;\r\n            if (!isNullOrUndef(component.getChildContext)) {\r\n                childContext = component.getChildContext();\r\n            }\r\n            if (isNullOrUndef(childContext)) {\r\n                childContext = component._childContext;\r\n            }\r\n            else {\r\n                childContext = combineFrom(context, childContext);\r\n            }\r\n            var lifeCycle = component._lifecycle;\r\n            inferno.internal_patch(lastInput, nextInput, parentDom, lifeCycle, childContext, component._isSVG, false);\r\n            // If this component was unmounted by its parent, do nothing. This is no-op\r\n            if (component._unmounted) {\r\n                return;\r\n            }\r\n            lifeCycle.trigger();\r\n            if (!isNullOrUndef(component.componentDidUpdate)) {\r\n                component.componentDidUpdate(props, prevState, context);\r\n            }\r\n            if (!isNull(inferno.options.afterUpdate)) {\r\n                inferno.options.afterUpdate(vNode);\r\n            }\r\n        }\r\n        var dom = (vNode.dom = nextInput.dom);\r\n        if (inferno.options.findDOMNodeEnabled) {\r\n            inferno.internal_DOMNodeMap.set(component, nextInput.dom);\r\n        }\r\n        while (!isNullOrUndef((vNode = vNode.parentVNode))) {\r\n            if ((vNode.flags & 28 /* Component */) > 0) {\r\n                vNode.dom = dom;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        component.state = component._pendingState;\r\n        component._pendingState = null;\r\n    }\r\n    if (isFunction(callback)) {\r\n        callback.call(component);\r\n    }\r\n}\r\nvar Component = function Component(props, context) {\r\n    this.state = null;\r\n    this._blockRender = false;\r\n    this._blockSetState = true;\r\n    this._pendingSetState = false;\r\n    this._pendingState = null;\r\n    this._lastInput = null;\r\n    this._vNode = null;\r\n    this._unmounted = false;\r\n    this._lifecycle = null;\r\n    this._childContext = null;\r\n    this._isSVG = false;\r\n    this._updating = true;\r\n    /** @type {object} */\r\n    this.props = props || inferno.EMPTY_OBJ;\r\n    /** @type {object} */\r\n    this.context = context || inferno.EMPTY_OBJ; // context should not be mutable\r\n};\r\nComponent.prototype.forceUpdate = function forceUpdate (callback) {\r\n    if (this._unmounted) {\r\n        return;\r\n    }\r\n    applyState(this, true, callback);\r\n};\r\nComponent.prototype.setState = function setState (newState, callback) {\r\n    if (this._unmounted) {\r\n        return;\r\n    }\r\n    if (!this._blockSetState) {\r\n        queueStateChanges(this, newState, callback);\r\n    }\r\n    else {\r\n        if (false) {\r\n            throwError(\"cannot update state via setState() in componentWillUpdate() or constructor.\");\r\n        }\r\n        throwError();\r\n    }\r\n};\r\nComponent.prototype._updateComponent = function _updateComponent (prevState, nextState, prevProps, nextProps, context, force, fromSetState) {\r\n    if (this._unmounted === true) {\r\n        if (false) {\r\n            throwError(noOp);\r\n        }\r\n        throwError();\r\n    }\r\n    if (prevProps !== nextProps ||\r\n        nextProps === inferno.EMPTY_OBJ ||\r\n        prevState !== nextState ||\r\n        force) {\r\n        if (prevProps !== nextProps || nextProps === inferno.EMPTY_OBJ) {\r\n            if (!isNullOrUndef(this.componentWillReceiveProps) && !fromSetState) {\r\n                this._blockRender = true;\r\n                this.componentWillReceiveProps(nextProps, context);\r\n                // If this component was removed during its own update do nothing...\r\n                if (this._unmounted) {\r\n                    return NO_OP;\r\n                }\r\n                this._blockRender = false;\r\n            }\r\n            if (this._pendingSetState) {\r\n                nextState = combineFrom(nextState, this._pendingState);\r\n                this._pendingSetState = false;\r\n                this._pendingState = null;\r\n            }\r\n        }\r\n        /* Update if scu is not defined, or it returns truthy value or force */\r\n        if (force ||\r\n            isNullOrUndef(this.shouldComponentUpdate) ||\r\n            (this.shouldComponentUpdate &&\r\n                this.shouldComponentUpdate(nextProps, nextState, context))) {\r\n            if (!isNullOrUndef(this.componentWillUpdate)) {\r\n                this._blockSetState = true;\r\n                this.componentWillUpdate(nextProps, nextState, context);\r\n                this._blockSetState = false;\r\n            }\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n            if (inferno.options.beforeRender) {\r\n                inferno.options.beforeRender(this);\r\n            }\r\n            var render = this.render(nextProps, nextState, context);\r\n            if (inferno.options.afterRender) {\r\n                inferno.options.afterRender(this);\r\n            }\r\n            return render;\r\n        }\r\n        else {\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n        }\r\n    }\r\n    return NO_OP;\r\n};\r\n// tslint:disable-next-line:no-empty\r\nComponent.prototype.render = function render (nextProps, nextState, nextContext) { };\n\nexports['default'] = Component;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SetupStorm; });\n/* unused harmony export stormBackground */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Storm; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inferno___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_inferno__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inferno_component__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inferno_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_inferno_component__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_inferno_create_element__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_inferno_create_element___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_inferno_create_element__);\nvar _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var sys_namespace='storm:';var SetupStorm=function SetupStorm(setStore){return new Promise(function(resolve,reject){setStore({storm_transitions:function storm_transitions(stormName,store){var ns=sys_namespace+stormName+':transitions';return typeof store[ns]==='undefined'?{}:store[ns];},expose_storm:function expose_storm(stormName,store){return exposedNamespacedProps(store,sys_namespace+stormName+':');}},function(){return resolve();});});};var stormBackground=function stormBackground(context){return function(userspace,store,getStore,scripts){var transitions=store.storm_transitions(userspace,store);scripts.forEach(function(script){return script(transitions,function(){return getStore(userspace);},context);});};};var Storm=function(_Component){_inherits(Storm,_Component);function Storm(props){_classCallCheck(this,Storm);var _this2=_possibleConstructorReturn(this,(Storm.__proto__||Object.getPrototypeOf(Storm)).call(this,props));_this2.state=Object.assign({},{baseSet:false,namespace:sys_namespace+_this2.props.namespace+':'},typeof _this2.props.loadersOnly!='undefined'?{loaders:_this2.props.loadersOnly,addProps:function addProps(){return{};},transitions:{},background:function background(){return null;}}:_this2.props.spec(initSetScope(sys_namespace+_this2.props.namespace+':',_this2.props.setStore,_this2.props.store)));return _this2;}_createClass(Storm,[{key:'componentWillUnmount',value:function componentWillUnmount(){// const loaders = this.state.loaders(this.state.api, this.props.params || {});\n//\n// //garbage collect unused storm props\n// this.props.setStore(\n//     nullifyKeys(\n//         composeStoreState(loaders, this.state.namespace, this.state.addProps(this.state.api), this.state.transitions)\n//     )\n// )\n}},{key:'componentDidMount',value:function componentDidMount(){var _this3=this;var loaders=this.state.loaders(this.state.api,this.props.params);var _this=this;if(loaders.length===0){this.setState({baseSet:true});return;}this.props.setStore(composeStoreState(loaders,this.state.namespace,this.state.addProps(this.state.api),this.state.transitions),function(){return _this3.setState({baseSet:true},function(){if(typeof _this3.props.onInitialRender==='function'){_this3.props.onInitialRender(_this3.props.store);}loaders.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),loadKeys=_ref2[0],_ref2$=_ref2[1],fetcher=_ref2$.fetcher,bases=_ref2$.bases;_this3.loadDataAtKey(fetcher,loadKeys,loadKeys.map(function(loadKey){return _this3.state.namespace+loadKey;}),function(){return _this3.state.background(stormBackground(_this),{context:_this,store:_this3.props.store});});});});});}},{key:'loadDataAtKey',value:function loadDataAtKey(fetcher,load_keys,scoped_keys,cb){var _this4=this;if(typeof fetcher==='function'){fetcher().then(function(data){return scoped_keys.length===1?_this4.props.setStore(_defineProperty({},scoped_keys[0],data),function(){return typeof cb==='function'?cb():null;}):_this4.props.setStore(Object.assign.apply(Object,[{}].concat(_toConsumableArray(scoped_keys.map(function(scoped_key,i){return _defineProperty({},scoped_key,data[load_keys[i]]);})))),function(){return typeof cb==='function'?cb():null;});}).catch(function(err){return _this4.props.onError(scoped_keys,err);});}}},{key:'render',value:function render(){if(this.state.baseSet){return this.renderReactiveChild(exposedNamespacedProps(this.props.store,this.state.namespace));}else{return Object(__WEBPACK_IMPORTED_MODULE_0_inferno__[\"createVNode\"])(2,'div',null,null,{'style':{display:\"none\"}});}}},{key:'renderReactiveChild',value:function renderReactiveChild(scopeStore){return __WEBPACK_IMPORTED_MODULE_2_inferno_create_element___default()(this.props.children,scopeStore);}}]);return Storm;}(__WEBPACK_IMPORTED_MODULE_1_inferno_component___default.a);var exposedNamespacedProps=function exposedNamespacedProps(store,namespace){return Object.keys(store).reduce(function(accum,val,i,array){return Object.assign({},accum,val.includes(namespace)&&!val.includes('transitions')?_defineProperty({},val.split(namespace)[1],store[val]):null);},{});};var nullifyKeys=function nullifyKeys(obj){return Object.keys(obj).reduce(function(accum,key,i,array){accum[key]=null;return accum;},{});};var composeStoreState=function composeStoreState(loaders,namespace,additionalProps,transitions){return Object.assign.apply(Object,[{},//helper props\npadKeys(namespace,additionalProps),//hacky persistence for transition functions\n_defineProperty({},namespace+'transitions',transitions)].concat(_toConsumableArray(loaders.map(function(_ref6){var _ref7=_slicedToArray(_ref6,2),loadKeys=_ref7[0],_ref7$=_ref7[1],fetcher=_ref7$.fetcher,bases=_ref7$.bases;return Object.assign.apply(Object,[{}].concat(_toConsumableArray(loadKeys.map(function(loadKey,i){return _defineProperty({},namespace+loadKey,bases[i]);}))));}))));};var initSetScope=function initSetScope(namespace,setState,store){return function(transition,cb){setState(function(state){return padKeys(namespace,transition(extractByNamespace(namespace,state)));},function(){return typeof cb==='function'?cb():null;});};};var extractByNamespace=function extractByNamespace(namespace,state){return Object.keys(state).reduce(function(accum,key,i,array){if(key.includes(namespace)){var field=key.split(namespace)[1];accum[field]=state[key];}return accum;},{});};var padKeys=function padKeys(pad,obj){return Object.keys(obj).reduce(function(accum,val,i,array){return Object.assign({},accum,_defineProperty({},pad+val,obj[val]));},{});};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(17).default;\nmodule.exports.default = module.exports;\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = __webpack_require__(0);\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno-Create-Element\r\n */ /** TypeDoc Comment */\r\nvar componentHooks = new Set();\r\ncomponentHooks.add(\"onComponentWillMount\");\r\ncomponentHooks.add(\"onComponentDidMount\");\r\ncomponentHooks.add(\"onComponentWillUnmount\");\r\ncomponentHooks.add(\"onComponentShouldUpdate\");\r\ncomponentHooks.add(\"onComponentWillUpdate\");\r\ncomponentHooks.add(\"onComponentDidUpdate\");\r\n/**\r\n * Creates virtual node\r\n * @param {string|Function|Component<any, any>} type Type of node\r\n * @param {object=} props Optional props for virtual node\r\n * @param {...{object}=} _children Optional children for virtual node\r\n * @returns {VNode} new virtual ndoe\r\n */\r\nfunction createElement(type, props) {\n    var _children = [], len = arguments.length - 2;\n    while ( len-- > 0 ) _children[ len ] = arguments[ len + 2 ];\n\r\n    if (isInvalid(type) || isObject(type)) {\r\n        throw new Error(\"Inferno Error: createElement() name parameter cannot be undefined, null, false or true, It must be a string, class or function.\");\r\n    }\r\n    var children = _children;\r\n    var ref = null;\r\n    var key = null;\r\n    var className = null;\r\n    var flags = 0;\r\n    var newProps;\r\n    if (_children) {\r\n        if (_children.length === 1) {\r\n            children = _children[0];\r\n        }\r\n        else if (_children.length === 0) {\r\n            children = void 0;\r\n        }\r\n    }\r\n    if (isString(type)) {\r\n        flags = inferno.getFlagsForElementVnode(type);\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop in props) {\r\n                if (prop === \"className\" || prop === \"class\") {\r\n                    className = props[prop];\r\n                }\r\n                else if (prop === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else if (prop === \"children\" && isUndefined(children)) {\r\n                    children = props.children; // always favour children args, default to props\r\n                }\r\n                else if (prop === \"ref\") {\r\n                    ref = props.ref;\r\n                }\r\n                else {\r\n                    newProps[prop] = props[prop];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        flags = 16 /* ComponentUnknown */;\r\n        if (!isUndefined(children)) {\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.children = children;\r\n            children = null;\r\n        }\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop$1 in props) {\r\n                if (componentHooks.has(prop$1)) {\r\n                    if (!ref) {\r\n                        ref = {};\r\n                    }\r\n                    ref[prop$1] = props[prop$1];\r\n                }\r\n                else if (prop$1 === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else {\r\n                    newProps[prop$1] = props[prop$1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return inferno.createVNode(flags, type, className, children, newProps, key, ref);\r\n}\n\nexports['default'] = createElement;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__background_entry_js__ = __webpack_require__(19);\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(setScope){return{api:{},loaders:function loaders(api,params){return[[['weather_data'],{fetcher:function fetcher(){return new Promise(function(resolve,reject){return resolve([]);});},//request must be a promise!\nbases:[null]}]];},addProps:function addProps(api){return{//some additional properties to track\ntemperature:75};},transitions:{'heat_wave':function heat_wave(){return setScope(function(state){return{temperature:state.temperature+20};});}},background:__WEBPACK_IMPORTED_MODULE_0__background_entry_js__[\"a\" /* default */]};});\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__weather_patterns_js__ = __webpack_require__(20);\n//EDIT HERE. add any scripts that need to run with access to storm:app_store's state\nvar BACKGROUND_SCRIPTS=[__WEBPACK_IMPORTED_MODULE_0__weather_patterns_js__[\"a\" /* default */]];//This is an implementation detail. You don't need to know what it's up to. \n/* harmony default export */ __webpack_exports__[\"a\"] = (function(initBackgroundScripts,_ref){var context=_ref.context,store=_ref.store;context.componentWillUpdate=function(nextProps,nextState){store=nextProps.store;};var getStore=function getStore(stormspace){return store.expose_storm(stormspace,store);};initBackgroundScripts('app_base',store,getStore,BACKGROUND_SCRIPTS);});\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(transitions,getStore,storm){//what's storm? just a ref to our store's parent component. aka the 'this' in this.state\nstorm.componentWillUnmount=function(){//destroy any lingering setIntervals when this storm unmounts.\n//or leave it running. you do you\n};setTimeout(function(){var heat_wave=transitions.heat_wave;heat_wave();setTimeout(function(){console.log(getStore());},1000);},4000);});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.eb3481b9.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9eb3b725c3d403f799e7","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno/index.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 1\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno-component/index.js\n// module id = 2\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where Inferno gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes Inferno's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with Inferno.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno-scripts/config/polyfills.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 6\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 7\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 8\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 9\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 10\n// module chunks = 0","import { render } from 'inferno';\nimport App from './App';\n\nrender(<App />, document.getElementById('app'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// This should be boolean and not reference to window.document\r\nvar isBrowser = !!(typeof window !== \"undefined\" && window.document);\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStatefulComponent(o) {\r\n    return !isUndefined(o.prototype) && !isUndefined(o.prototype.render);\r\n}\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNumber(o) {\r\n    return typeof o === \"number\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction warning(message) {\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(message);\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar options = {\r\n    afterMount: null,\r\n    afterRender: null,\r\n    afterUpdate: null,\r\n    beforeRender: null,\r\n    beforeUnmount: null,\r\n    createVNode: null,\r\n    findDOMNodeEnabled: false,\r\n    recyclingEnabled: false,\r\n    roots: []\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar xlinkNS = \"http://www.w3.org/1999/xlink\";\r\nvar xmlNS = \"http://www.w3.org/XML/1998/namespace\";\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\nvar strictProps = new Set();\r\nstrictProps.add(\"volume\");\r\nstrictProps.add(\"defaultChecked\");\r\nvar booleanProps = new Set();\r\nbooleanProps.add(\"muted\");\r\nbooleanProps.add(\"scoped\");\r\nbooleanProps.add(\"loop\");\r\nbooleanProps.add(\"open\");\r\nbooleanProps.add(\"checked\");\r\nbooleanProps.add(\"default\");\r\nbooleanProps.add(\"capture\");\r\nbooleanProps.add(\"disabled\");\r\nbooleanProps.add(\"readOnly\");\r\nbooleanProps.add(\"required\");\r\nbooleanProps.add(\"autoplay\");\r\nbooleanProps.add(\"controls\");\r\nbooleanProps.add(\"seamless\");\r\nbooleanProps.add(\"reversed\");\r\nbooleanProps.add(\"allowfullscreen\");\r\nbooleanProps.add(\"novalidate\");\r\nbooleanProps.add(\"hidden\");\r\nbooleanProps.add(\"autoFocus\");\r\nbooleanProps.add(\"selected\");\r\nbooleanProps.add(\"indeterminate\");\r\nvar namespaces = new Map();\r\nnamespaces.set(\"xlink:href\", xlinkNS);\r\nnamespaces.set(\"xlink:arcrole\", xlinkNS);\r\nnamespaces.set(\"xlink:actuate\", xlinkNS);\r\nnamespaces.set(\"xlink:show\", xlinkNS);\r\nnamespaces.set(\"xlink:role\", xlinkNS);\r\nnamespaces.set(\"xlink:title\", xlinkNS);\r\nnamespaces.set(\"xlink:type\", xlinkNS);\r\nnamespaces.set(\"xml:base\", xmlNS);\r\nnamespaces.set(\"xml:lang\", xmlNS);\r\nnamespaces.set(\"xml:space\", xmlNS);\r\nvar isUnitlessNumber = new Set();\r\nisUnitlessNumber.add(\"animationIterationCount\");\r\nisUnitlessNumber.add(\"borderImageOutset\");\r\nisUnitlessNumber.add(\"borderImageSlice\");\r\nisUnitlessNumber.add(\"borderImageWidth\");\r\nisUnitlessNumber.add(\"boxFlex\");\r\nisUnitlessNumber.add(\"boxFlexGroup\");\r\nisUnitlessNumber.add(\"boxOrdinalGroup\");\r\nisUnitlessNumber.add(\"columnCount\");\r\nisUnitlessNumber.add(\"flex\");\r\nisUnitlessNumber.add(\"flexGrow\");\r\nisUnitlessNumber.add(\"flexPositive\");\r\nisUnitlessNumber.add(\"flexShrink\");\r\nisUnitlessNumber.add(\"flexNegative\");\r\nisUnitlessNumber.add(\"flexOrder\");\r\nisUnitlessNumber.add(\"gridRow\");\r\nisUnitlessNumber.add(\"gridColumn\");\r\nisUnitlessNumber.add(\"fontWeight\");\r\nisUnitlessNumber.add(\"lineClamp\");\r\nisUnitlessNumber.add(\"lineHeight\");\r\nisUnitlessNumber.add(\"opacity\");\r\nisUnitlessNumber.add(\"order\");\r\nisUnitlessNumber.add(\"orphans\");\r\nisUnitlessNumber.add(\"tabSize\");\r\nisUnitlessNumber.add(\"widows\");\r\nisUnitlessNumber.add(\"zIndex\");\r\nisUnitlessNumber.add(\"zoom\");\r\nisUnitlessNumber.add(\"fillOpacity\");\r\nisUnitlessNumber.add(\"floodOpacity\");\r\nisUnitlessNumber.add(\"stopOpacity\");\r\nisUnitlessNumber.add(\"strokeDasharray\");\r\nisUnitlessNumber.add(\"strokeDashoffset\");\r\nisUnitlessNumber.add(\"strokeMiterlimit\");\r\nisUnitlessNumber.add(\"strokeOpacity\");\r\nisUnitlessNumber.add(\"strokeWidth\");\r\nvar skipProps = new Set();\r\nskipProps.add(\"children\");\r\nskipProps.add(\"childrenType\");\r\nskipProps.add(\"defaultValue\");\r\nskipProps.add(\"ref\");\r\nskipProps.add(\"key\");\r\nskipProps.add(\"checked\");\r\nskipProps.add(\"multiple\");\r\nvar delegatedEvents = new Set();\r\ndelegatedEvents.add(\"onClick\");\r\ndelegatedEvents.add(\"onMouseDown\");\r\ndelegatedEvents.add(\"onMouseUp\");\r\ndelegatedEvents.add(\"onMouseMove\");\r\ndelegatedEvents.add(\"onSubmit\");\r\ndelegatedEvents.add(\"onDblClick\");\r\ndelegatedEvents.add(\"onKeyDown\");\r\ndelegatedEvents.add(\"onKeyUp\");\r\ndelegatedEvents.add(\"onKeyPress\");\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar isiOS = isBrowser &&\r\n    !!navigator.platform &&\r\n    /iPad|iPhone|iPod/.test(navigator.platform);\r\nvar delegatedEvents$1 = new Map();\r\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\r\n    var delegatedRoots = delegatedEvents$1.get(name);\r\n    if (nextEvent) {\r\n        if (!delegatedRoots) {\r\n            delegatedRoots = { items: new Map(), docEvent: null };\r\n            delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\r\n            delegatedEvents$1.set(name, delegatedRoots);\r\n        }\r\n        if (!lastEvent) {\r\n            if (isiOS && name === \"onClick\") {\r\n                trapClickOnNonInteractiveElement(dom);\r\n            }\r\n        }\r\n        delegatedRoots.items.set(dom, nextEvent);\r\n    }\r\n    else if (delegatedRoots) {\r\n        var items = delegatedRoots.items;\r\n        if (items.delete(dom)) {\r\n            // If any items were deleted, check if listener need to be removed\r\n            if (items.size === 0) {\r\n                document.removeEventListener(normalizeEventName(name), delegatedRoots.docEvent);\r\n                delegatedEvents$1.delete(name);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction dispatchEvents(event, target, items, count, isClick, eventData) {\r\n    var dom = target;\r\n    while (count > 0) {\r\n        if (isClick && dom.disabled) {\r\n            return;\r\n        }\r\n        var eventsToTrigger = items.get(dom);\r\n        if (eventsToTrigger) {\r\n            count--;\r\n            // linkEvent object\r\n            eventData.dom = dom;\r\n            if (eventsToTrigger.event) {\r\n                eventsToTrigger.event(eventsToTrigger.data, event);\r\n            }\r\n            else {\r\n                eventsToTrigger(event);\r\n            }\r\n            if (event.cancelBubble) {\r\n                return;\r\n            }\r\n        }\r\n        dom = dom.parentNode;\r\n        // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n        // because the event listener is on document.body\r\n        // Don't process clicks on disabled elements\r\n        if (dom === null) {\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction normalizeEventName(name) {\r\n    return name.substr(2).toLowerCase();\r\n}\r\nfunction stopPropagation() {\r\n    this.cancelBubble = true;\r\n    this.stopImmediatePropagation();\r\n}\r\nfunction attachEventToDocument(name, delegatedRoots) {\r\n    var docEvent = function (event) {\r\n        var count = delegatedRoots.items.size;\r\n        if (count > 0) {\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData = {\r\n                dom: document\r\n            };\r\n            try {\r\n                Object.defineProperty(event, \"currentTarget\", {\r\n                    configurable: true,\r\n                    get: function get() {\r\n                        return eventData.dom;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                /* safari7 and phantomJS will crash */\r\n            }\r\n            dispatchEvents(event, event.target, delegatedRoots.items, count, event.type === \"click\", eventData);\r\n        }\r\n    };\r\n    document.addEventListener(normalizeEventName(name), docEvent);\r\n    return docEvent;\r\n}\r\n// tslint:disable-next-line:no-empty\r\nfunction emptyFn() { }\r\nfunction trapClickOnNonInteractiveElement(dom) {\r\n    // Mobile Safari does not fire properly bubble click events on\r\n    // non-interactive elements, which means delegated click listeners do not\r\n    // fire. The workaround for this bug involves attaching an empty click\r\n    // listener on the target node.\r\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n    // Just set it using the onclick property so that we don't have to manage any\r\n    // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n    // removed.\r\n    // TODO: Only do this for the relevant Safaris maybe?\r\n    dom.onclick = emptyFn;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction isCheckedType(type) {\r\n    return type === \"checkbox\" || type === \"radio\";\r\n}\r\nfunction onTextInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onCheckboxChange(e) {\r\n    e.stopPropagation(); // This click should not propagate its for internal use\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    if (props.onClick) {\r\n        var event = props.onClick;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onclick) {\r\n        props.onclick(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    applyValue(newProps, dom);\r\n}\r\nfunction processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            if (isCheckedType(nextPropsOrEmpty.type)) {\r\n                dom.onclick = onCheckboxChange;\r\n                dom.onclick.wrapped = true;\r\n            }\r\n            else {\r\n                dom.oninput = onTextInputChange;\r\n                dom.oninput.wrapped = true;\r\n            }\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue(nextPropsOrEmpty, dom) {\r\n    var type = nextPropsOrEmpty.type;\r\n    var value = nextPropsOrEmpty.value;\r\n    var checked = nextPropsOrEmpty.checked;\r\n    var multiple = nextPropsOrEmpty.multiple;\r\n    var defaultValue = nextPropsOrEmpty.defaultValue;\r\n    var hasValue = !isNullOrUndef(value);\r\n    if (type && type !== dom.type) {\r\n        dom.setAttribute(\"type\", type);\r\n    }\r\n    if (multiple && multiple !== dom.multiple) {\r\n        dom.multiple = multiple;\r\n    }\r\n    if (!isNullOrUndef(defaultValue) && !hasValue) {\r\n        dom.defaultValue = defaultValue + \"\";\r\n    }\r\n    if (isCheckedType(type)) {\r\n        if (hasValue) {\r\n            dom.value = value;\r\n        }\r\n        if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n    else {\r\n        if (hasValue && dom.value !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n        else if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction updateChildOptionGroup(vNode, value) {\r\n    var type = vNode.type;\r\n    if (type === \"optgroup\") {\r\n        var children = vNode.children;\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOption(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOption(children, value);\r\n        }\r\n    }\r\n    else {\r\n        updateChildOption(vNode, value);\r\n    }\r\n}\r\nfunction updateChildOption(vNode, value) {\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    // we do this as multiple may have changed\r\n    dom.value = props.value;\r\n    if ((isArray(value) && value.indexOf(props.value) !== -1) ||\r\n        props.value === value) {\r\n        dom.selected = true;\r\n    }\r\n    else if (!isNullOrUndef(value) || !isNullOrUndef(props.selected)) {\r\n        dom.selected = props.selected || false;\r\n    }\r\n}\r\nfunction onSelectChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onChange) {\r\n        var event = props.onChange;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onchange) {\r\n        props.onchange(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$1(newVNode, dom, newProps, false);\r\n    }\r\n}\r\nfunction processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$1(vNode, dom, nextPropsOrEmpty, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.onchange = onSelectChange;\r\n            dom.onchange.wrapped = true;\r\n        }\r\n    }\r\n}\r\nfunction applyValue$1(vNode, dom, nextPropsOrEmpty, mounting) {\r\n    if (nextPropsOrEmpty.multiple !== dom.multiple) {\r\n        dom.multiple = nextPropsOrEmpty.multiple;\r\n    }\r\n    var children = vNode.children;\r\n    if (!isInvalid(children)) {\r\n        var value = nextPropsOrEmpty.value;\r\n        if (mounting && isNullOrUndef(value)) {\r\n            value = nextPropsOrEmpty.defaultValue;\r\n        }\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOptionGroup(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOptionGroup(children, value);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction wrappedOnChange$1(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onTextareaInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$2(newVNode, vNode.dom, false);\r\n    }\r\n}\r\nfunction processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$2(nextPropsOrEmpty, dom, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.oninput = onTextareaInputChange;\r\n            dom.oninput.wrapped = true;\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange$1;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue$2(nextPropsOrEmpty, dom, mounting) {\r\n    var value = nextPropsOrEmpty.value;\r\n    var domValue = dom.value;\r\n    if (isNullOrUndef(value)) {\r\n        if (mounting) {\r\n            var defaultValue = nextPropsOrEmpty.defaultValue;\r\n            if (!isNullOrUndef(defaultValue)) {\r\n                if (defaultValue !== domValue) {\r\n                    dom.defaultValue = defaultValue;\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n            else if (domValue !== \"\") {\r\n                dom.defaultValue = \"\";\r\n                dom.value = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        /* There is value so keep it controlled */\r\n        if (domValue !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * There is currently no support for switching same input between controlled and nonControlled\r\n * If that ever becomes a real issue, then re design controlled elements\r\n * Currently user must choose either controlled or non-controlled and stick with that\r\n */\r\nfunction processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    if ((flags & 512 /* InputElement */) > 0) {\r\n        processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    else if ((flags & 2048 /* SelectElement */) > 0) {\r\n        processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    else if ((flags & 1024 /* TextareaElement */) > 0) {\r\n        processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n}\r\nfunction isControlledFormElement(nextPropsOrEmpty) {\r\n    return nextPropsOrEmpty.type && isCheckedType(nextPropsOrEmpty.type)\r\n        ? !isNullOrUndef(nextPropsOrEmpty.checked)\r\n        : !isNullOrUndef(nextPropsOrEmpty.value);\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction normalizeChildNodes(parentDom) {\r\n    var dom = parentDom.firstChild;\r\n    while (dom) {\r\n        if (dom.nodeType === 8) {\r\n            if (dom.data === \"!\") {\r\n                var placeholder = document.createTextNode(\"\");\r\n                parentDom.replaceChild(placeholder, dom);\r\n                dom = dom.nextSibling;\r\n            }\r\n            else {\r\n                var lastDom = dom.previousSibling;\r\n                parentDom.removeChild(dom);\r\n                dom = lastDom || parentDom.firstChild;\r\n            }\r\n        }\r\n        else {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction hydrateComponent(vNode, dom, lifecycle, context, isSVG, isClass) {\r\n    var type = vNode.type;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    if (isClass) {\r\n        var _isSVG = dom.namespaceURI === svgNS;\r\n        var instance = createClassComponentInstance(vNode, type, props, context, _isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        hydrate(input, dom, lifecycle, instance._childContext, _isSVG);\r\n        vNode.dom = input.dom;\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false; // Mount finished allow going sync\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        hydrate(input$1, dom, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        vNode.dom = input$1.dom;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateElement(vNode, dom, lifecycle, context, isSVG) {\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var flags = vNode.flags;\r\n    var ref = vNode.ref;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warning(\"Inferno hydration: Server-side markup doesn't match client-side markup or Initial render target is not empty\");\r\n        }\r\n        var newDom = mountElement(vNode, null, lifecycle, context, isSVG);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        hydrateChildren(children, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (dom.firstChild !== null && !isSamePropsInnerHTML(dom, props)) {\r\n        dom.textContent = \"\"; // dom has content, but VNode has no children remove everything from DOM\r\n    }\r\n    if (props) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (!isNullOrUndef(className)) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    else {\r\n        if (dom.className !== \"\") {\r\n            dom.removeAttribute(\"class\");\r\n        }\r\n    }\r\n    if (ref) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateChildren(children, parentDom, lifecycle, context, isSVG) {\r\n    normalizeChildNodes(parentDom);\r\n    var dom = parentDom.firstChild;\r\n    if (isStringOrNumber(children)) {\r\n        if (!isNull(dom) && dom.nodeType === 3) {\r\n            if (dom.nodeValue !== children) {\r\n                dom.nodeValue = children;\r\n            }\r\n        }\r\n        else if (children === \"\") {\r\n            parentDom.appendChild(document.createTextNode(\"\"));\r\n        }\r\n        else {\r\n            parentDom.textContent = children;\r\n        }\r\n        if (!isNull(dom)) {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n    else if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isNull(child) && isObject(child)) {\r\n                if (!isNull(dom)) {\r\n                    var nextSibling = dom.nextSibling;\r\n                    hydrate(child, dom, lifecycle, context, isSVG);\r\n                    dom = nextSibling;\r\n                }\r\n                else {\r\n                    mount(child, parentDom, lifecycle, context, isSVG);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // It's VNode\r\n        if (!isNull(dom)) {\r\n            hydrate(children, dom, lifecycle, context, isSVG);\r\n            dom = dom.nextSibling;\r\n        }\r\n        else {\r\n            mount(children, parentDom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    // clear any other DOM nodes, there should be only a single entry for the root\r\n    while (dom) {\r\n        var nextSibling$1 = dom.nextSibling;\r\n        parentDom.removeChild(dom);\r\n        dom = nextSibling$1;\r\n    }\r\n}\r\nfunction hydrateText(vNode, dom) {\r\n    if (dom.nodeType !== 3) {\r\n        var newDom = mountText(vNode, null);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    var text = vNode.children;\r\n    if (dom.nodeValue !== text) {\r\n        dom.nodeValue = text;\r\n    }\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrateVoid(vNode, dom) {\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrate(vNode, dom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        hydrateComponent(vNode, dom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        hydrateElement(vNode, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        hydrateText(vNode, dom);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        hydrateVoid(vNode, dom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError((\"hydrate() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction hydrateRoot(input, parentDom, lifecycle) {\r\n    if (!isNull(parentDom)) {\r\n        var dom = parentDom.firstChild;\r\n        if (!isNull(dom)) {\r\n            hydrate(input, dom, lifecycle, EMPTY_OBJ, false);\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while ((dom = dom.nextSibling)) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar componentPools = new Map();\r\nvar elementPools = new Map();\r\nfunction recycleElement(vNode, lifecycle, context, isSVG) {\r\n    var tag = vNode.type;\r\n    var pools = elementPools.get(tag);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                patchElement(recycledVNode, vNode, null, lifecycle, context, isSVG, true);\r\n                return vNode.dom;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolElement(vNode) {\r\n    var tag = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = elementPools.get(tag);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        elementPools.set(tag, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nfunction recycleComponent(vNode, lifecycle, context, isSVG) {\r\n    var type = vNode.type;\r\n    var pools = componentPools.get(type);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                var flags = vNode.flags;\r\n                var failed = patchComponent(recycledVNode, vNode, null, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0, true);\r\n                if (!failed) {\r\n                    return vNode.dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolComponent(vNode) {\r\n    var hooks = vNode.ref;\r\n    var nonRecycleHooks = hooks &&\r\n        (hooks.onComponentWillMount ||\r\n            hooks.onComponentWillUnmount ||\r\n            hooks.onComponentDidMount ||\r\n            hooks.onComponentWillUpdate ||\r\n            hooks.onComponentDidUpdate);\r\n    if (nonRecycleHooks) {\r\n        return;\r\n    }\r\n    var type = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = componentPools.get(type);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        componentPools.set(type, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction unmount(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var flags = vNode.flags;\r\n    var dom = vNode.dom;\r\n    if (flags & 28 /* Component */) {\r\n        var instance = vNode.children;\r\n        var isStatefulComponent$$1 = (flags & 4 /* ComponentClass */) > 0;\r\n        var props = vNode.props || EMPTY_OBJ;\r\n        var ref = vNode.ref;\r\n        if (!isRecycling) {\r\n            if (isStatefulComponent$$1) {\r\n                if (!instance._unmounted) {\r\n                    if (!isNull(options.beforeUnmount)) {\r\n                        options.beforeUnmount(vNode);\r\n                    }\r\n                    if (!isUndefined(instance.componentWillUnmount)) {\r\n                        instance.componentWillUnmount();\r\n                    }\r\n                    if (ref && !isRecycling) {\r\n                        ref(null);\r\n                    }\r\n                    instance._unmounted = true;\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.delete(instance);\r\n                    }\r\n                    unmount(instance._lastInput, null, instance._lifecycle, false, isRecycling);\r\n                }\r\n            }\r\n            else {\r\n                if (!isNullOrUndef(ref)) {\r\n                    if (!isNullOrUndef(ref.onComponentWillUnmount)) {\r\n                        ref.onComponentWillUnmount(dom, props);\r\n                    }\r\n                }\r\n                unmount(instance, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        if (options.recyclingEnabled &&\r\n            !isStatefulComponent$$1 &&\r\n            (parentDom || canRecycle)) {\r\n            poolComponent(vNode);\r\n        }\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var ref$1 = vNode.ref;\r\n        var props$1 = vNode.props;\r\n        if (!isRecycling && isFunction(ref$1)) {\r\n            ref$1(null);\r\n        }\r\n        var children = vNode.children;\r\n        if (!isNullOrUndef(children)) {\r\n            if (isArray(children)) {\r\n                for (var i = 0, len = children.length; i < len; i++) {\r\n                    var child = children[i];\r\n                    if (!isInvalid(child) && isObject(child)) {\r\n                        unmount(child, null, lifecycle, false, isRecycling);\r\n                    }\r\n                }\r\n            }\r\n            else if (isObject(children)) {\r\n                unmount(children, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        if (!isNull(props$1)) {\r\n            for (var name in props$1) {\r\n                // do not add a hasOwnProperty check here, it affects performance\r\n                if (props$1[name] !== null && isAttrAnEvent(name)) {\r\n                    patchEvent(name, props$1[name], null, dom);\r\n                    // We need to set this null, because same props otherwise come back if SCU returns false and we are recyling\r\n                    props$1[name] = null;\r\n                }\r\n            }\r\n        }\r\n        if (options.recyclingEnabled && (parentDom || canRecycle)) {\r\n            poolElement(vNode);\r\n        }\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// rather than use a Map, like we did before, we can use an array here\r\n// given there shouldn't be THAT many roots on the page, the difference\r\n// in performance is huge: https://esbench.com/bench/5802a691330ab09900a1a2da\r\nvar componentToDOMNodeMap = new Map();\r\nvar roots = options.roots;\r\n/**\r\n * When inferno.options.findDOMNOdeEnabled is true, this function will return DOM Node by component instance\r\n * @param ref Component instance\r\n * @returns {*|null} returns dom node\r\n */\r\nfunction findDOMNode(ref) {\r\n    if (!options.findDOMNodeEnabled) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"findDOMNode() has been disabled, use Inferno.options.findDOMNodeEnabled = true; enabled findDOMNode(). Warning this can significantly impact performance!\");\r\n        }\r\n        throwError();\r\n    }\r\n    var dom = ref && ref.nodeType ? ref : null;\r\n    return componentToDOMNodeMap.get(ref) || dom;\r\n}\r\nfunction getRoot(dom) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        var root = roots[i];\r\n        if (root.dom === dom) {\r\n            return root;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction setRoot(dom, input, lifecycle) {\r\n    var root = {\r\n        dom: dom,\r\n        input: input,\r\n        lifecycle: lifecycle\r\n    };\r\n    roots.push(root);\r\n    return root;\r\n}\r\nfunction removeRoot(root) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        if (roots[i] === root) {\r\n            roots.splice(i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (isBrowser && document.body === null) {\r\n        warning('Inferno warning: you cannot initialize inferno without \"document.body\". Wait on \"DOMContentLoaded\" event, add script to bottom of body, or use async/defer attributes on script tag.');\r\n    }\r\n}\r\nvar documentBody = isBrowser ? document.body : null;\r\n/**\r\n * Renders virtual node tree into parent node.\r\n * @param {VNode | null | string | number} input vNode to be rendered\r\n * @param parentDom DOM node which content will be replaced by virtual node\r\n * @returns {InfernoChildren} rendered virtual node\r\n */\r\nfunction render(input, parentDom) {\r\n    if (documentBody === parentDom) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('you cannot render() to the \"document.body\". Use an empty element as a container instead.');\r\n        }\r\n        throwError();\r\n    }\r\n    if (input === NO_OP) {\r\n        return;\r\n    }\r\n    var root = getRoot(parentDom);\r\n    if (isNull(root)) {\r\n        var lifecycle = new Lifecycle();\r\n        if (!isInvalid(input)) {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            if (!hydrateRoot(input, parentDom, lifecycle)) {\r\n                mount(input, parentDom, lifecycle, EMPTY_OBJ, false);\r\n            }\r\n            root = setRoot(parentDom, input, lifecycle);\r\n            lifecycle.trigger();\r\n        }\r\n    }\r\n    else {\r\n        var lifecycle$1 = root.lifecycle;\r\n        lifecycle$1.listeners = [];\r\n        if (isNullOrUndef(input)) {\r\n            unmount(root.input, parentDom, lifecycle$1, false, false);\r\n            removeRoot(root);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            patch(root.input, input, parentDom, lifecycle$1, EMPTY_OBJ, false, false);\r\n        }\r\n        root.input = input;\r\n        lifecycle$1.trigger();\r\n    }\r\n    if (root) {\r\n        var rootInput = root.input;\r\n        if (rootInput && rootInput.flags & 28 /* Component */) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n}\r\nfunction createRenderer(parentDom) {\r\n    return function renderer(lastInput, nextInput) {\r\n        if (!parentDom) {\r\n            parentDom = lastInput;\r\n        }\r\n        render(nextInput, parentDom);\r\n    };\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction patch(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    if (lastVNode !== nextVNode) {\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        if (nextFlags & 28 /* Component */) {\r\n            var isClass = (nextFlags & 4 /* ComponentClass */) > 0;\r\n            if (lastFlags & 28 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, isClass), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 3970 /* Element */) {\r\n            if (lastFlags & 3970 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountElement(nextVNode, null, lifecycle, context, isSVG), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 1 /* Text */) {\r\n            if (lastFlags & 1 /* Text */) {\r\n                patchText(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountText(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 4096 /* Void */) {\r\n            if (lastFlags & 4096 /* Void */) {\r\n                patchVoid(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountVoid(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            // Error case: mount new one replacing old one\r\n            replaceLastChildAndUnmount(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction unmountChildren(children, dom, lifecycle, isRecycling) {\r\n    if (isVNode(children)) {\r\n        unmount(children, dom, lifecycle, true, isRecycling);\r\n    }\r\n    else if (isArray(children)) {\r\n        removeAllChildren(dom, children, lifecycle, isRecycling);\r\n    }\r\n    else {\r\n        dom.textContent = \"\";\r\n    }\r\n}\r\nfunction patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    var nextTag = nextVNode.type;\r\n    var lastTag = lastVNode.type;\r\n    if (lastTag !== nextTag) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    else {\r\n        var dom = lastVNode.dom;\r\n        var lastProps = lastVNode.props;\r\n        var nextProps = nextVNode.props;\r\n        var lastChildren = lastVNode.children;\r\n        var nextChildren = nextVNode.children;\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        var nextRef = nextVNode.ref;\r\n        var lastClassName = lastVNode.className;\r\n        var nextClassName = nextVNode.className;\r\n        nextVNode.dom = dom;\r\n        isSVG = isSVG || (nextFlags & 128 /* SvgElement */) > 0;\r\n        if (lastChildren !== nextChildren) {\r\n            var childrenIsSVG = isSVG === true && nextVNode.type !== \"foreignObject\";\r\n            patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, childrenIsSVG, isRecycling);\r\n        }\r\n        // inlined patchProps  -- starts --\r\n        if (lastProps !== nextProps) {\r\n            var lastPropsOrEmpty = lastProps || EMPTY_OBJ;\r\n            var nextPropsOrEmpty = nextProps || EMPTY_OBJ;\r\n            var hasControlledValue = false;\r\n            if (nextPropsOrEmpty !== EMPTY_OBJ) {\r\n                var isFormElement = (nextFlags & 3584 /* FormElement */) > 0;\r\n                if (isFormElement) {\r\n                    hasControlledValue = isControlledFormElement(nextPropsOrEmpty);\r\n                }\r\n                for (var prop in nextPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    var nextValue = nextPropsOrEmpty[prop];\r\n                    var lastValue = lastPropsOrEmpty[prop];\r\n                    patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue);\r\n                }\r\n                if (isFormElement) {\r\n                    // When inferno is recycling form element, we need to process it like it would be mounting\r\n                    processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, isRecycling, hasControlledValue);\r\n                }\r\n            }\r\n            if (lastPropsOrEmpty !== EMPTY_OBJ) {\r\n                for (var prop$1 in lastPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    if (isNullOrUndef(nextPropsOrEmpty[prop$1]) &&\r\n                        !isNullOrUndef(lastPropsOrEmpty[prop$1])) {\r\n                        removeProp(prop$1, lastPropsOrEmpty[prop$1], dom, nextFlags);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inlined patchProps  -- ends --\r\n        if (lastClassName !== nextClassName) {\r\n            if (isNullOrUndef(nextClassName)) {\r\n                dom.removeAttribute(\"class\");\r\n            }\r\n            else {\r\n                if (isSVG) {\r\n                    dom.setAttribute(\"class\", nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n        }\r\n        if (nextRef) {\r\n            if (lastVNode.ref !== nextRef || isRecycling) {\r\n                mountRef(dom, nextRef, lifecycle);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var patchArray = false;\r\n    var patchKeyed = false;\r\n    if (nextFlags & 64 /* HasNonKeyedChildren */) {\r\n        patchArray = true;\r\n    }\r\n    else if ((lastFlags & 32 /* HasKeyedChildren */) > 0 &&\r\n        (nextFlags & 32 /* HasKeyedChildren */) > 0) {\r\n        patchKeyed = true;\r\n        patchArray = true;\r\n    }\r\n    else if (isInvalid(nextChildren)) {\r\n        unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n    }\r\n    else if (isInvalid(lastChildren)) {\r\n        if (isStringOrNumber(nextChildren)) {\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            if (isArray(nextChildren)) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n            else {\r\n                mount(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n    }\r\n    else if (isStringOrNumber(nextChildren)) {\r\n        if (isStringOrNumber(lastChildren)) {\r\n            updateTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n    }\r\n    else if (isArray(nextChildren)) {\r\n        if (isArray(lastChildren)) {\r\n            patchArray = true;\r\n            if (isKeyed(lastChildren, nextChildren)) {\r\n                patchKeyed = true;\r\n            }\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    else if (isArray(lastChildren)) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        mount(nextChildren, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (isVNode(nextChildren)) {\r\n        if (isVNode(lastChildren)) {\r\n            patch(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mount(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (patchArray) {\r\n        var lastLength = lastChildren.length;\r\n        var nextLength = nextChildren.length;\r\n        // Fast path's for both algorithms\r\n        if (lastLength === 0) {\r\n            if (nextLength > 0) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n        else if (nextLength === 0) {\r\n            removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        }\r\n        else if (patchKeyed) {\r\n            patchKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastLength, nextLength);\r\n        }\r\n        else {\r\n            patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastLength, nextLength);\r\n        }\r\n    }\r\n}\r\nfunction patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling) {\r\n    var lastType = lastVNode.type;\r\n    var nextType = nextVNode.type;\r\n    var lastKey = lastVNode.key;\r\n    var nextKey = nextVNode.key;\r\n    if (lastType !== nextType || lastKey !== nextKey) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        return false;\r\n    }\r\n    else {\r\n        var nextProps = nextVNode.props || EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = lastVNode.children;\r\n            instance._updating = true;\r\n            if (instance._unmounted) {\r\n                if (isNull(parentDom)) {\r\n                    return true;\r\n                }\r\n                replaceChild(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, (nextVNode.flags & 4 /* ComponentClass */) > 0), lastVNode.dom);\r\n            }\r\n            else {\r\n                var hasComponentDidUpdate = !isUndefined(instance.componentDidUpdate);\r\n                var nextState = instance.state;\r\n                // When component has componentDidUpdate hook, we need to clone lastState or will be modified by reference during update\r\n                var lastState = hasComponentDidUpdate\r\n                    ? combineFrom(nextState, null)\r\n                    : nextState;\r\n                var lastProps = instance.props;\r\n                nextVNode.children = instance;\r\n                instance._isSVG = isSVG;\r\n                var lastInput = instance._lastInput;\r\n                var nextInput = instance._updateComponent(lastState, nextState, lastProps, nextProps, context, false, false);\r\n                // If this component was destroyed by its parent do nothing, this is no-op\r\n                // It can happen by using external callback etc during render / update\r\n                if (instance._unmounted) {\r\n                    return false;\r\n                }\r\n                var didUpdate = true;\r\n                // Update component before getting child context\r\n                var childContext;\r\n                if (!isNullOrUndef(instance.getChildContext)) {\r\n                    childContext = instance.getChildContext();\r\n                }\r\n                if (isNullOrUndef(childContext)) {\r\n                    childContext = context;\r\n                }\r\n                else {\r\n                    childContext = combineFrom(context, childContext);\r\n                }\r\n                instance._childContext = childContext;\r\n                if (isInvalid(nextInput)) {\r\n                    nextInput = createVoidVNode();\r\n                }\r\n                else if (nextInput === NO_OP) {\r\n                    nextInput = lastInput;\r\n                    didUpdate = false;\r\n                }\r\n                else if (isStringOrNumber(nextInput)) {\r\n                    nextInput = createTextVNode(nextInput, null);\r\n                }\r\n                else if (isArray(nextInput)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput)) {\r\n                    if (!isNull(nextInput.dom)) {\r\n                        nextInput = directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput.flags & 28 /* Component */) {\r\n                    nextInput.parentVNode = nextVNode;\r\n                }\r\n                else if (lastInput.flags & 28 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n                instance._lastInput = nextInput;\r\n                instance._vNode = nextVNode;\r\n                if (didUpdate) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, childContext, isSVG, isRecycling);\r\n                    if (hasComponentDidUpdate && instance.componentDidUpdate) {\r\n                        instance.componentDidUpdate(lastProps, lastState);\r\n                    }\r\n                    if (!isNull(options.afterUpdate)) {\r\n                        options.afterUpdate(nextVNode);\r\n                    }\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.set(instance, nextInput.dom);\r\n                    }\r\n                }\r\n                nextVNode.dom = nextInput.dom;\r\n            }\r\n            instance._updating = false;\r\n        }\r\n        else {\r\n            var shouldUpdate = true;\r\n            var lastProps$1 = lastVNode.props;\r\n            var nextHooks = nextVNode.ref;\r\n            var nextHooksDefined = !isNullOrUndef(nextHooks);\r\n            var lastInput$1 = lastVNode.children;\r\n            var nextInput$1 = lastInput$1;\r\n            nextVNode.dom = lastVNode.dom;\r\n            nextVNode.children = lastInput$1;\r\n            if (lastKey !== nextKey) {\r\n                shouldUpdate = true;\r\n            }\r\n            else {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps$1, nextProps);\r\n                }\r\n            }\r\n            if (shouldUpdate !== false) {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentWillUpdate)) {\r\n                    nextHooks.onComponentWillUpdate(lastProps$1, nextProps);\r\n                }\r\n                nextInput$1 = nextType(nextProps, context);\r\n                if (isInvalid(nextInput$1)) {\r\n                    nextInput$1 = createVoidVNode();\r\n                }\r\n                else if (isStringOrNumber(nextInput$1) && nextInput$1 !== NO_OP) {\r\n                    nextInput$1 = createTextVNode(nextInput$1, null);\r\n                }\r\n                else if (isArray(nextInput$1)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput$1)) {\r\n                    if (!isNull(nextInput$1.dom)) {\r\n                        nextInput$1 = directClone(nextInput$1);\r\n                    }\r\n                }\r\n                if (nextInput$1 !== NO_OP) {\r\n                    patch(lastInput$1, nextInput$1, parentDom, lifecycle, context, isSVG, isRecycling);\r\n                    nextVNode.children = nextInput$1;\r\n                    if (nextHooksDefined &&\r\n                        !isNullOrUndef(nextHooks.onComponentDidUpdate)) {\r\n                        nextHooks.onComponentDidUpdate(lastProps$1, nextProps);\r\n                    }\r\n                    nextVNode.dom = nextInput$1.dom;\r\n                }\r\n            }\r\n            if (nextInput$1.flags & 28 /* Component */) {\r\n                nextInput$1.parentVNode = nextVNode;\r\n            }\r\n            else if (lastInput$1.flags & 28 /* Component */) {\r\n                lastInput$1.parentVNode = nextVNode;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction patchText(lastVNode, nextVNode) {\r\n    var nextText = nextVNode.children;\r\n    var dom = lastVNode.dom;\r\n    nextVNode.dom = dom;\r\n    if (lastVNode.children !== nextText) {\r\n        dom.nodeValue = nextText;\r\n    }\r\n}\r\nfunction patchVoid(lastVNode, nextVNode) {\r\n    nextVNode.dom = lastVNode.dom;\r\n}\r\nfunction patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling, lastChildrenLength, nextChildrenLength) {\r\n    var commonLength = lastChildrenLength > nextChildrenLength\r\n        ? nextChildrenLength\r\n        : lastChildrenLength;\r\n    var i = 0;\r\n    for (; i < commonLength; i++) {\r\n        var nextChild = nextChildren[i];\r\n        if (nextChild.dom) {\r\n            nextChild = nextChildren[i] = directClone(nextChild);\r\n        }\r\n        patch(lastChildren[i], nextChild, dom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    if (lastChildrenLength < nextChildrenLength) {\r\n        for (i = commonLength; i < nextChildrenLength; i++) {\r\n            var nextChild$1 = nextChildren[i];\r\n            if (nextChild$1.dom) {\r\n                nextChild$1 = nextChildren[i] = directClone(nextChild$1);\r\n            }\r\n            appendChild(dom, mount(nextChild$1, null, lifecycle, context, isSVG));\r\n        }\r\n    }\r\n    else if (lastChildrenLength > nextChildrenLength) {\r\n        for (i = commonLength; i < lastChildrenLength; i++) {\r\n            unmount(lastChildren[i], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchKeyedChildren(a, b, dom, lifecycle, context, isSVG, isRecycling, aLength, bLength) {\r\n    var aEnd = aLength - 1;\r\n    var bEnd = bLength - 1;\r\n    var aStart = 0;\r\n    var bStart = 0;\r\n    var i;\r\n    var j;\r\n    var aNode;\r\n    var bNode;\r\n    var nextNode;\r\n    var nextPos;\r\n    var node;\r\n    var aStartNode = a[aStart];\r\n    var bStartNode = b[bStart];\r\n    var aEndNode = a[aEnd];\r\n    var bEndNode = b[bEnd];\r\n    if (bStartNode.dom) {\r\n        b[bStart] = bStartNode = directClone(bStartNode);\r\n    }\r\n    if (bEndNode.dom) {\r\n        b[bEnd] = bEndNode = directClone(bEndNode);\r\n    }\r\n    // Step 1\r\n    // tslint:disable-next-line\r\n    outer: {\r\n        // Sync nodes with the same key at the beginning.\r\n        while (aStartNode.key === bStartNode.key) {\r\n            patch(aStartNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aStart++;\r\n            bStart++;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aStartNode = a[aStart];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n        }\r\n        // Sync nodes with the same key at the end.\r\n        while (aEndNode.key === bEndNode.key) {\r\n            patch(aEndNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aEnd--;\r\n            bEnd--;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aEndNode = a[aEnd];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n        }\r\n    }\r\n    if (aStart > aEnd) {\r\n        if (bStart <= bEnd) {\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < bLength ? b[nextPos].dom : null;\r\n            while (bStart <= bEnd) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n            }\r\n        }\r\n    }\r\n    else if (bStart > bEnd) {\r\n        while (aStart <= aEnd) {\r\n            unmount(a[aStart++], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    else {\r\n        var aLeft = aEnd - aStart + 1;\r\n        var bLeft = bEnd - bStart + 1;\r\n        var sources = new Array(bLeft);\r\n        // Mark all nodes as inserted.\r\n        for (i = 0; i < bLeft; i++) {\r\n            sources[i] = -1;\r\n        }\r\n        var moved = false;\r\n        var pos = 0;\r\n        var patched = 0;\r\n        // When sizes are small, just loop them through\r\n        if (bLeft <= 4 || aLeft * bLeft <= 16) {\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLeft) {\r\n                    for (j = bStart; j <= bEnd; j++) {\r\n                        bNode = b[j];\r\n                        if (aNode.key === bNode.key) {\r\n                            sources[j - bStart] = i;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                            patched++;\r\n                            a[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var keyIndex = new Map();\r\n            // Map keys by their index in array\r\n            for (i = bStart; i <= bEnd; i++) {\r\n                keyIndex.set(b[i].key, i);\r\n            }\r\n            // Try to patch same keys\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLeft) {\r\n                    j = keyIndex.get(aNode.key);\r\n                    if (!isUndefined(j)) {\r\n                        bNode = b[j];\r\n                        sources[j - bStart] = i;\r\n                        if (pos > j) {\r\n                            moved = true;\r\n                        }\r\n                        else {\r\n                            pos = j;\r\n                        }\r\n                        if (bNode.dom) {\r\n                            b[j] = bNode = directClone(bNode);\r\n                        }\r\n                        patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                        patched++;\r\n                        a[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // fast-path: if nothing patched remove all old and add all new\r\n        if (aLeft === aLength && patched === 0) {\r\n            removeAllChildren(dom, a, lifecycle, isRecycling);\r\n            while (bStart < bLeft) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), null);\r\n            }\r\n        }\r\n        else {\r\n            i = aLeft - patched;\r\n            while (i > 0) {\r\n                aNode = a[aStart++];\r\n                if (!isNull(aNode)) {\r\n                    unmount(aNode, dom, lifecycle, true, isRecycling);\r\n                    i--;\r\n                }\r\n            }\r\n            if (moved) {\r\n                var seq = lis_algorithm(sources);\r\n                j = seq.length - 1;\r\n                for (i = bLeft - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                    }\r\n                    else {\r\n                        if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            node = b[pos];\r\n                            nextPos = pos + 1;\r\n                            insertOrAppend(dom, node.dom, nextPos < bLength ? b[nextPos].dom : null);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (patched !== bLeft) {\r\n                // when patched count doesn't match b length we need to insert those new ones\r\n                // loop backwards so we can use insertBefore\r\n                for (i = bLeft - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction lis_algorithm(arr) {\r\n    var p = arr.slice(0);\r\n    var result = [0];\r\n    var i;\r\n    var j;\r\n    var u;\r\n    var v;\r\n    var c;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        var arrI = arr[i];\r\n        if (arrI !== -1) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\r\nfunction isAttrAnEvent(attr) {\r\n    return attr[0] === \"o\" && attr[1] === \"n\";\r\n}\r\nfunction patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue) {\r\n    if (lastValue !== nextValue) {\r\n        if (skipProps.has(prop) || (hasControlledValue && prop === \"value\")) {\r\n            return;\r\n        }\r\n        else if (booleanProps.has(prop)) {\r\n            prop = prop === \"autoFocus\" ? prop.toLowerCase() : prop;\r\n            dom[prop] = !!nextValue;\r\n        }\r\n        else if (strictProps.has(prop)) {\r\n            var value = isNullOrUndef(nextValue) ? \"\" : nextValue;\r\n            if (dom[prop] !== value) {\r\n                dom[prop] = value;\r\n            }\r\n        }\r\n        else if (isAttrAnEvent(prop)) {\r\n            patchEvent(prop, lastValue, nextValue, dom);\r\n        }\r\n        else if (isNullOrUndef(nextValue)) {\r\n            dom.removeAttribute(prop);\r\n        }\r\n        else if (prop === \"style\") {\r\n            patchStyle(lastValue, nextValue, dom);\r\n        }\r\n        else if (prop === \"dangerouslySetInnerHTML\") {\r\n            var lastHtml = lastValue && lastValue.__html;\r\n            var nextHtml = nextValue && nextValue.__html;\r\n            if (lastHtml !== nextHtml) {\r\n                if (!isNullOrUndef(nextHtml) && !isSameInnerHTML(dom, nextHtml)) {\r\n                    dom.innerHTML = nextHtml;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // We optimize for NS being boolean. Its 99.9% time false\r\n            if (isSVG && namespaces.has(prop)) {\r\n                // If we end up in this path we can read property again\r\n                dom.setAttributeNS(namespaces.get(prop), prop, nextValue);\r\n            }\r\n            else {\r\n                dom.setAttribute(prop, nextValue);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchEvent(name, lastValue, nextValue, dom) {\r\n    if (lastValue !== nextValue) {\r\n        if (delegatedEvents.has(name)) {\r\n            handleEvent(name, lastValue, nextValue, dom);\r\n        }\r\n        else {\r\n            var nameLowerCase = name.toLowerCase();\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (domEvent && domEvent.wrapped) {\r\n                return;\r\n            }\r\n            if (!isFunction(nextValue) && !isNullOrUndef(nextValue)) {\r\n                var linkEvent = nextValue.event;\r\n                if (linkEvent && isFunction(linkEvent)) {\r\n                    dom[nameLowerCase] = function (e) {\r\n                        linkEvent(nextValue.data, e);\r\n                    };\r\n                }\r\n                else {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError((\"an event on a VNode \\\"\" + name + \"\\\". was not a function or a valid linkEvent.\"));\r\n                    }\r\n                    throwError();\r\n                }\r\n            }\r\n            else {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n// We are assuming here that we come from patchProp routine\r\n// -nextAttrValue cannot be null or undefined\r\nfunction patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n    var domStyle = dom.style;\r\n    var style;\r\n    var value;\r\n    if (isString(nextAttrValue)) {\r\n        domStyle.cssText = nextAttrValue;\r\n        return;\r\n    }\r\n    if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\r\n        for (style in nextAttrValue) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            value = nextAttrValue[style];\r\n            if (value !== lastAttrValue[style]) {\r\n                domStyle[style] =\r\n                    !isNumber(value) || isUnitlessNumber.has(style)\r\n                        ? value\r\n                        : value + \"px\";\r\n            }\r\n        }\r\n        for (style in lastAttrValue) {\r\n            if (isNullOrUndef(nextAttrValue[style])) {\r\n                domStyle[style] = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (style in nextAttrValue) {\r\n            value = nextAttrValue[style];\r\n            domStyle[style] =\r\n                !isNumber(value) || isUnitlessNumber.has(style) ? value : value + \"px\";\r\n        }\r\n    }\r\n}\r\nfunction removeProp(prop, lastValue, dom, nextFlags) {\r\n    if (prop === \"value\") {\r\n        // When removing value of select element, it needs to be set to null instead empty string, because empty string is valid value for option which makes that option selected\r\n        // MS IE/Edge don't follow html spec for textArea and input elements and we need to set empty string to value in those cases to avoid \"null\" and \"undefined\" texts\r\n        dom.value = nextFlags & 2048 /* SelectElement */ ? null : \"\";\r\n    }\r\n    else if (prop === \"style\") {\r\n        dom.removeAttribute(\"style\");\r\n    }\r\n    else if (isAttrAnEvent(prop)) {\r\n        handleEvent(prop, lastValue, null, dom);\r\n    }\r\n    else {\r\n        dom.removeAttribute(prop);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction mount(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 3970 /* Element */) {\r\n        return mountElement(vNode, parentDom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 28 /* Component */) {\r\n        return mountComponent(vNode, parentDom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        return mountVoid(vNode, parentDom);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        return mountText(vNode, parentDom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            if (typeof vNode === \"object\") {\r\n                throwError((\"mount() received an object that's not a valid VNode, you should stringify it first. Object: \\\"\" + (JSON.stringify(vNode)) + \"\\\".\"));\r\n            }\r\n            else {\r\n                throwError((\"mount() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n            }\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction mountText(vNode, parentDom) {\r\n    var dom = document.createTextNode(vNode.children);\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountVoid(vNode, parentDom) {\r\n    var dom = document.createTextNode(\"\");\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountElement(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleElement(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var flags = vNode.flags;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    dom = documentCreateElement(vNode.type, isSVG);\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        if (isStringOrNumber(children)) {\r\n            setTextContent(dom, children);\r\n        }\r\n        else {\r\n            var childrenIsSVG = isSVG === true && vNode.type !== \"foreignObject\";\r\n            if (isArray(children)) {\r\n                mountArrayChildren(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n            else if (isVNode(children)) {\r\n                mount(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(props)) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (className !== null) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (!isNull(ref)) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountArrayChildren(children, dom, lifecycle, context, isSVG) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        // Verify can string/number be here. might cause de-opt. - Normalization takes care of it.\r\n        if (!isInvalid(child)) {\r\n            if (child.dom) {\r\n                children[i] = child = directClone(child);\r\n            }\r\n            mount(children[i], dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n}\r\nfunction mountComponent(vNode, parentDom, lifecycle, context, isSVG, isClass) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleComponent(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var type = vNode.type;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    if (isClass) {\r\n        var instance = createClassComponentInstance(vNode, type, props, context, isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        vNode.dom = dom = mount(input, null, lifecycle, instance._childContext, isSVG);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false;\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        vNode.dom = dom = mount(input$1, null, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nfunction mountClassComponentCallbacks(vNode, ref, instance, lifecycle) {\r\n    if (ref) {\r\n        if (isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        else {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (isStringOrNumber(ref)) {\r\n                    throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n                }\r\n                else if (isObject(ref) && vNode.flags & 4 /* ComponentClass */) {\r\n                    throwError(\"functional component lifecycle events are not supported on ES2015 class components.\");\r\n                }\r\n                else {\r\n                    throwError((\"a bad value for \\\"ref\\\" was used on component: \\\"\" + (JSON.stringify(ref)) + \"\\\"\"));\r\n                }\r\n            }\r\n            throwError();\r\n        }\r\n    }\r\n    var hasDidMount = !isUndefined(instance.componentDidMount);\r\n    var afterMount = options.afterMount;\r\n    if (hasDidMount || !isNull(afterMount)) {\r\n        lifecycle.addListener((function () {\r\n            instance._updating = true;\r\n            if (afterMount) {\r\n                afterMount(vNode);\r\n            }\r\n            if (hasDidMount) {\r\n                instance.componentDidMount();\r\n            }\r\n            instance._updating = false;\r\n        }));\r\n    }\r\n}\r\nfunction mountFunctionalComponentCallbacks(props, ref, dom, lifecycle) {\r\n    if (ref) {\r\n        if (!isNullOrUndef(ref.onComponentWillMount)) {\r\n            ref.onComponentWillMount(props);\r\n        }\r\n        if (!isNullOrUndef(ref.onComponentDidMount)) {\r\n            lifecycle.addListener((function () { return ref.onComponentDidMount(dom, props); }));\r\n        }\r\n    }\r\n}\r\nfunction mountRef(dom, value, lifecycle) {\r\n    if (isFunction(value)) {\r\n        lifecycle.addListener((function () { return value(dom); }));\r\n    }\r\n    else {\r\n        if (isInvalid(value)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// We need EMPTY_OBJ defined in one place.\r\n// Its used for comparison so we cant inline it into shared\r\nvar EMPTY_OBJ = {};\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    Object.freeze(EMPTY_OBJ);\r\n}\r\nfunction createClassComponentInstance(vNode, Component, props, context, isSVG, lifecycle) {\r\n    if (isUndefined(context)) {\r\n        context = EMPTY_OBJ; // Context should not be mutable\r\n    }\r\n    var instance = new Component(props, context);\r\n    vNode.children = instance;\r\n    instance._blockSetState = false;\r\n    instance.context = context;\r\n    if (instance.props === EMPTY_OBJ) {\r\n        instance.props = props;\r\n    }\r\n    // setState callbacks must fire after render is done when called from componentWillReceiveProps or componentWillMount\r\n    instance._lifecycle = lifecycle;\r\n    instance._unmounted = false;\r\n    instance._isSVG = isSVG;\r\n    if (!isNullOrUndef(instance.componentWillMount)) {\r\n        instance._blockRender = true;\r\n        instance.componentWillMount();\r\n        if (instance._pendingSetState) {\r\n            var state = instance.state;\r\n            var pending = instance._pendingState;\r\n            if (state === null) {\r\n                instance.state = pending;\r\n            }\r\n            else {\r\n                for (var key in pending) {\r\n                    state[key] = pending[key];\r\n                }\r\n            }\r\n            instance._pendingSetState = false;\r\n            instance._pendingState = null;\r\n        }\r\n        instance._blockRender = false;\r\n    }\r\n    var childContext;\r\n    if (!isNullOrUndef(instance.getChildContext)) {\r\n        childContext = instance.getChildContext();\r\n    }\r\n    if (isNullOrUndef(childContext)) {\r\n        instance._childContext = context;\r\n    }\r\n    else {\r\n        instance._childContext = combineFrom(context, childContext);\r\n    }\r\n    if (!isNull(options.beforeRender)) {\r\n        options.beforeRender(instance);\r\n    }\r\n    var input = instance.render(props, instance.state, context);\r\n    if (!isNull(options.afterRender)) {\r\n        options.afterRender(instance);\r\n    }\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    instance._lastInput = input;\r\n    return instance;\r\n}\r\nfunction replaceLastChildAndUnmount(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    replaceVNode(parentDom, mount(nextInput, null, lifecycle, context, isSVG), lastInput, lifecycle, isRecycling);\r\n}\r\nfunction replaceVNode(parentDom, dom, vNode, lifecycle, isRecycling) {\r\n    unmount(vNode, null, lifecycle, false, isRecycling);\r\n    replaceChild(parentDom, dom, vNode.dom);\r\n}\r\nfunction createFunctionalComponentInput(vNode, component, props, context) {\r\n    var input = component(props, context);\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    return input;\r\n}\r\nfunction setTextContent(dom, text) {\r\n    if (text !== \"\") {\r\n        dom.textContent = text;\r\n    }\r\n    else {\r\n        dom.appendChild(document.createTextNode(\"\"));\r\n    }\r\n}\r\nfunction updateTextContent(dom, text) {\r\n    var textNode = dom.firstChild;\r\n    // Guard against external change on DOM node.\r\n    if (isNull(textNode)) {\r\n        setTextContent(dom, text);\r\n    }\r\n    else {\r\n        textNode.nodeValue = text;\r\n    }\r\n}\r\nfunction appendChild(parentDom, dom) {\r\n    parentDom.appendChild(dom);\r\n}\r\nfunction insertOrAppend(parentDom, newNode, nextNode) {\r\n    if (isNullOrUndef(nextNode)) {\r\n        appendChild(parentDom, newNode);\r\n    }\r\n    else {\r\n        parentDom.insertBefore(newNode, nextNode);\r\n    }\r\n}\r\nfunction documentCreateElement(tag, isSVG) {\r\n    if (isSVG === true) {\r\n        return document.createElementNS(svgNS, tag);\r\n    }\r\n    else {\r\n        return document.createElement(tag);\r\n    }\r\n}\r\nfunction replaceWithNewNode(lastNode, nextNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    unmount(lastNode, null, lifecycle, false, isRecycling);\r\n    var dom = mount(nextNode, null, lifecycle, context, isSVG);\r\n    nextNode.dom = dom;\r\n    replaceChild(parentDom, dom, lastNode.dom);\r\n}\r\nfunction replaceChild(parentDom, newDom, lastDom) {\r\n    if (!parentDom) {\r\n        parentDom = lastDom.parentNode;\r\n    }\r\n    parentDom.replaceChild(newDom, lastDom);\r\n}\r\nfunction removeChild(parentDom, dom) {\r\n    parentDom.removeChild(dom);\r\n}\r\nfunction removeAllChildren(dom, children, lifecycle, isRecycling) {\r\n    if (!options.recyclingEnabled || (options.recyclingEnabled && !isRecycling)) {\r\n        removeChildren(null, children, lifecycle, isRecycling);\r\n    }\r\n    dom.textContent = \"\";\r\n}\r\nfunction removeChildren(dom, children, lifecycle, isRecycling) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        if (!isInvalid(child)) {\r\n            unmount(child, dom, lifecycle, true, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction isKeyed(lastChildren, nextChildren) {\r\n    return (nextChildren.length > 0 &&\r\n        !isNullOrUndef(nextChildren[0]) &&\r\n        !isNullOrUndef(nextChildren[0].key) &&\r\n        lastChildren.length > 0 &&\r\n        !isNullOrUndef(lastChildren[0]) &&\r\n        !isNullOrUndef(lastChildren[0].key));\r\n}\r\nfunction isSameInnerHTML(dom, innerHTML) {\r\n    var tempdom = document.createElement(\"i\");\r\n    tempdom.innerHTML = innerHTML;\r\n    return tempdom.innerHTML === dom.innerHTML;\r\n}\r\nfunction isSamePropsInnerHTML(dom, props) {\r\n    return Boolean(props &&\r\n        props.dangerouslySetInnerHTML &&\r\n        props.dangerouslySetInnerHTML.__html &&\r\n        isSameInnerHTML(dom, props.dangerouslySetInnerHTML.__html));\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Creates virtual node\r\n * @param {number} flags\r\n * @param {string|Function|null} type\r\n * @param {string|null=} className\r\n * @param {object=} children\r\n * @param {object=} props\r\n * @param {*=} key\r\n * @param {object|Function=} ref\r\n * @param {boolean=} noNormalise\r\n * @returns {VNode} returns new virtual node\r\n */\r\nfunction createVNode(flags, type, className, children, props, key, ref, noNormalise) {\r\n    if (flags & 16 /* ComponentUnknown */) {\r\n        flags = isStatefulComponent(type)\r\n            ? 4 /* ComponentClass */\r\n            : 8 /* ComponentFunction */;\r\n    }\r\n    var vNode = {\r\n        children: children === void 0 ? null : children,\r\n        className: className === void 0 ? null : className,\r\n        dom: null,\r\n        flags: flags,\r\n        key: key === void 0 ? null : key,\r\n        props: props === void 0 ? null : props,\r\n        ref: ref === void 0 ? null : ref,\r\n        type: type\r\n    };\r\n    if (noNormalise !== true) {\r\n        normalize(vNode);\r\n    }\r\n    if (options.createVNode !== null) {\r\n        options.createVNode(vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction directClone(vNodeToClone) {\r\n    var newVNode;\r\n    var flags = vNodeToClone.flags;\r\n    if (flags & 28 /* Component */) {\r\n        var props;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (isNull(propsToClone)) {\r\n            props = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, null, null, props, vNodeToClone.key, vNodeToClone.ref, true);\r\n        var newProps = newVNode.props;\r\n        var newChildren = newProps.children;\r\n        // we need to also clone component children that are in props\r\n        // as the children may also have been hoisted\r\n        if (newChildren) {\r\n            if (isArray(newChildren)) {\r\n                var len = newChildren.length;\r\n                if (len > 0) {\r\n                    var tmpArray = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        var child = newChildren[i];\r\n                        if (isStringOrNumber(child)) {\r\n                            tmpArray.push(child);\r\n                        }\r\n                        else if (!isInvalid(child) && isVNode(child)) {\r\n                            tmpArray.push(directClone(child));\r\n                        }\r\n                    }\r\n                    newProps.children = tmpArray;\r\n                }\r\n            }\r\n            else if (isVNode(newChildren)) {\r\n                newProps.children = directClone(newChildren);\r\n            }\r\n        }\r\n        newVNode.children = null;\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var children = vNodeToClone.children;\r\n        var props$1;\r\n        var propsToClone$1 = vNodeToClone.props;\r\n        if (propsToClone$1 === null) {\r\n            props$1 = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props$1 = {};\r\n            for (var key$1 in propsToClone$1) {\r\n                props$1[key$1] = propsToClone$1[key$1];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, children, props$1, vNodeToClone.key, vNodeToClone.ref, !children);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n    }\r\n    return newVNode;\r\n}\r\n/*\r\n directClone is preferred over cloneVNode and used internally also.\r\n This function makes Inferno backwards compatible.\r\n And can be tree-shaked by modern bundlers\r\n\r\n Would be nice to combine this with directClone but could not do it without breaking change\r\n */\r\n/**\r\n * Clones given virtual node by creating new instance of it\r\n * @param {VNode} vNodeToClone virtual node to be cloned\r\n * @param {Props=} props additional props for new virtual node\r\n * @param {...*} _children new children for new virtual node\r\n * @returns {VNode} new virtual node\r\n */\r\nfunction cloneVNode(vNodeToClone, props) {\n    var _children = [], len$2 = arguments.length - 2;\n    while ( len$2-- > 0 ) _children[ len$2 ] = arguments[ len$2 + 2 ];\n\r\n    var children = _children;\r\n    var childrenLen = _children.length;\r\n    if (childrenLen > 0 && !isUndefined(_children[0])) {\r\n        if (!props) {\r\n            props = {};\r\n        }\r\n        if (childrenLen === 1) {\r\n            children = _children[0];\r\n        }\r\n        if (!isUndefined(children)) {\r\n            props.children = children;\r\n        }\r\n    }\r\n    var newVNode;\r\n    if (isArray(vNodeToClone)) {\r\n        var tmpArray = [];\r\n        for (var i = 0, len = vNodeToClone.length; i < len; i++) {\r\n            tmpArray.push(directClone(vNodeToClone[i]));\r\n        }\r\n        newVNode = tmpArray;\r\n    }\r\n    else {\r\n        var flags = vNodeToClone.flags;\r\n        var className = vNodeToClone.className;\r\n        var key = vNodeToClone.key;\r\n        var ref = vNodeToClone.ref;\r\n        if (props) {\r\n            if (props.hasOwnProperty(\"className\")) {\r\n                className = props.className;\r\n            }\r\n            if (props.hasOwnProperty(\"ref\")) {\r\n                ref = props.ref;\r\n            }\r\n            if (props.hasOwnProperty(\"key\")) {\r\n                key = props.key;\r\n            }\r\n        }\r\n        if (flags & 28 /* Component */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, null, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, true);\r\n            var newProps = newVNode.props;\r\n            if (newProps) {\r\n                var newChildren = newProps.children;\r\n                // we need to also clone component children that are in props\r\n                // as the children may also have been hoisted\r\n                if (newChildren) {\r\n                    if (isArray(newChildren)) {\r\n                        var len$1 = newChildren.length;\r\n                        if (len$1 > 0) {\r\n                            var tmpArray$1 = [];\r\n                            for (var i$1 = 0; i$1 < len$1; i$1++) {\r\n                                var child = newChildren[i$1];\r\n                                if (isStringOrNumber(child)) {\r\n                                    tmpArray$1.push(child);\r\n                                }\r\n                                else if (!isInvalid(child) && isVNode(child)) {\r\n                                    tmpArray$1.push(directClone(child));\r\n                                }\r\n                            }\r\n                            newProps.children = tmpArray$1;\r\n                        }\r\n                    }\r\n                    else if (isVNode(newChildren)) {\r\n                        newProps.children = directClone(newChildren);\r\n                    }\r\n                }\r\n            }\r\n            newVNode.children = null;\r\n        }\r\n        else if (flags & 3970 /* Element */) {\r\n            children =\r\n                props && !isUndefined(props.children)\r\n                    ? props.children\r\n                    : vNodeToClone.children;\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, children, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, false);\r\n        }\r\n        else if (flags & 1 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, key);\r\n        }\r\n    }\r\n    return newVNode;\r\n}\r\nfunction createVoidVNode() {\r\n    return createVNode(4096 /* Void */, null);\r\n}\r\nfunction createTextVNode(text, key) {\r\n    return createVNode(1 /* Text */, null, null, text, null, key);\r\n}\r\nfunction isVNode(o) {\r\n    return !!o.flags;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction applyKey(key, vNode) {\r\n    vNode.key = key;\r\n    return vNode;\r\n}\r\nfunction applyKeyIfMissing(key, vNode) {\r\n    if (isNumber(key)) {\r\n        key = \".\" + key;\r\n    }\r\n    if (isNull(vNode.key) || vNode.key[0] === \".\") {\r\n        return applyKey(key, vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction applyKeyPrefix(key, vNode) {\r\n    vNode.key = key + vNode.key;\r\n    return vNode;\r\n}\r\nfunction _normalizeVNodes(nodes, result, index, currentKey) {\r\n    for (var len = nodes.length; index < len; index++) {\r\n        var n = nodes[index];\r\n        var key = currentKey + \".\" + index;\r\n        if (!isInvalid(n)) {\r\n            if (isArray(n)) {\r\n                _normalizeVNodes(n, result, 0, key);\r\n            }\r\n            else {\r\n                if (isStringOrNumber(n)) {\r\n                    n = createTextVNode(n, null);\r\n                }\r\n                else if ((isVNode(n) && n.dom) || (n.key && n.key[0] === \".\")) {\r\n                    n = directClone(n);\r\n                }\r\n                if (isNull(n.key) || n.key[0] === \".\") {\r\n                    n = applyKey(key, n);\r\n                }\r\n                else {\r\n                    n = applyKeyPrefix(currentKey, n);\r\n                }\r\n                result.push(n);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction normalizeVNodes(nodes) {\r\n    var newNodes;\r\n    // we assign $ which basically means we've flagged this array for future note\r\n    // if it comes back again, we need to clone it, as people are using it\r\n    // in an immutable way\r\n    // tslint:disable\r\n    if (nodes[\"$\"] === true) {\r\n        nodes = nodes.slice();\r\n    }\r\n    else {\r\n        nodes[\"$\"] = true;\r\n    }\r\n    // tslint:enable\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n        var n = nodes[i];\r\n        if (isInvalid(n) || isArray(n)) {\r\n            var result = (newNodes || nodes).slice(0, i);\r\n            _normalizeVNodes(nodes, result, i, \"\");\r\n            return result;\r\n        }\r\n        else if (isStringOrNumber(n)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, createTextVNode(n, null)));\r\n        }\r\n        else if ((isVNode(n) && n.dom !== null) ||\r\n            (isNull(n.key) && (n.flags & 64 /* HasNonKeyedChildren */) === 0)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n        else if (newNodes) {\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n    }\r\n    return newNodes || nodes;\r\n}\r\nfunction normalizeChildren(children) {\r\n    if (isArray(children)) {\r\n        return normalizeVNodes(children);\r\n    }\r\n    else if (isVNode(children) && children.dom !== null) {\r\n        return directClone(children);\r\n    }\r\n    return children;\r\n}\r\nfunction normalizeProps(vNode, props, children) {\r\n    if (vNode.flags & 3970 /* Element */) {\r\n        if (isNullOrUndef(children) && props.hasOwnProperty(\"children\")) {\r\n            vNode.children = props.children;\r\n        }\r\n        if (props.hasOwnProperty(\"className\")) {\r\n            vNode.className = props.className || null;\r\n            delete props.className;\r\n        }\r\n    }\r\n    if (props.hasOwnProperty(\"ref\")) {\r\n        vNode.ref = props.ref;\r\n        delete props.ref;\r\n    }\r\n    if (props.hasOwnProperty(\"key\")) {\r\n        vNode.key = props.key;\r\n        delete props.key;\r\n    }\r\n}\r\nfunction getFlagsForElementVnode(type) {\r\n    if (type === \"svg\") {\r\n        return 128 /* SvgElement */;\r\n    }\r\n    else if (type === \"input\") {\r\n        return 512 /* InputElement */;\r\n    }\r\n    else if (type === \"select\") {\r\n        return 2048 /* SelectElement */;\r\n    }\r\n    else if (type === \"textarea\") {\r\n        return 1024 /* TextareaElement */;\r\n    }\r\n    else if (type === \"media\") {\r\n        return 256 /* MediaElement */;\r\n    }\r\n    return 2 /* HtmlElement */;\r\n}\r\nfunction normalize(vNode) {\r\n    var props = vNode.props;\r\n    var children = vNode.children;\r\n    // convert a wrongly created type back to element\r\n    // Primitive node doesn't have defaultProps, only Component\r\n    if (vNode.flags & 28 /* Component */) {\r\n        // set default props\r\n        var type = vNode.type;\r\n        var defaultProps = type.defaultProps;\r\n        if (!isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = vNode.props = defaultProps; // Create new object if only defaultProps given\r\n            }\r\n            else {\r\n                for (var prop in defaultProps) {\r\n                    if (isUndefined(props[prop])) {\r\n                        props[prop] = defaultProps[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isString(type)) {\r\n            vNode.flags = getFlagsForElementVnode(type);\r\n            if (props && props.children) {\r\n                vNode.children = props.children;\r\n                children = props.children;\r\n            }\r\n        }\r\n    }\r\n    if (props) {\r\n        normalizeProps(vNode, props, children);\r\n        if (!isInvalid(props.children)) {\r\n            props.children = normalizeChildren(props.children);\r\n        }\r\n    }\r\n    if (!isInvalid(children)) {\r\n        vNode.children = normalizeChildren(children);\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        // This code will be stripped out from production CODE\r\n        // It helps users to track errors in their applications.\r\n        var verifyKeys = function (vNodes) {\r\n            var keyValues = vNodes.map((function (vnode) {\r\n                return vnode.key;\r\n            }));\r\n            keyValues.some((function (item, idx) {\r\n                var hasDuplicate = keyValues.indexOf(item) !== idx;\r\n                if (hasDuplicate) {\r\n                    warning(\"Inferno normalisation(...): Encountered two children with same key, all keys must be unique within its siblings. Duplicated key is:\" +\r\n                        item);\r\n                }\r\n                return hasDuplicate;\r\n            }));\r\n        };\r\n        if (vNode.children && Array.isArray(vNode.children)) {\r\n            verifyKeys(vNode.children);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Links given data to event as first parameter\r\n * @param {*} data data to be linked, it will be available in function as first parameter\r\n * @param {Function} event Function to be called when event occurs\r\n * @returns {{data: *, event: Function}}\r\n */\r\nfunction linkEvent(data, event) {\r\n    if (isFunction(event)) {\r\n        return { data: data, event: event };\r\n    }\r\n    return null; // Return null when event is invalid, to avoid creating unnecessary event handlers\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/* tslint:disable:object-literal-sort-keys */\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    /* tslint:disable-next-line:no-empty */\r\n    var testFunc = function testFn() { };\r\n    if ((testFunc.name || testFunc.toString()).indexOf(\"testFn\") ===\r\n        -1) {\r\n        warning(\"It looks like you're using a minified copy of the development build \" +\r\n            \"of Inferno. When deploying Inferno apps to production, make sure to use \" +\r\n            \"the production build which skips development warnings and is faster. \" +\r\n            \"See http://infernojs.org for more details.\");\r\n    }\r\n}\r\nvar version = \"3.10.1\";\r\n// we duplicate it so it plays nicely with different module loading systems\r\nvar index = {\r\n    EMPTY_OBJ: EMPTY_OBJ,\r\n    NO_OP: NO_OP,\r\n    cloneVNode: cloneVNode,\r\n    createRenderer: createRenderer,\r\n    createVNode: createVNode,\r\n    findDOMNode: findDOMNode,\r\n    getFlagsForElementVnode: getFlagsForElementVnode,\r\n    internal_DOMNodeMap: componentToDOMNodeMap,\r\n    internal_isUnitlessNumber: isUnitlessNumber,\r\n    internal_normalize: normalize,\r\n    internal_patch: patch,\r\n    linkEvent: linkEvent,\r\n    options: options,\r\n    render: render,\r\n    version: version\r\n};\n\nexports['default'] = index;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO_OP = NO_OP;\nexports.cloneVNode = cloneVNode;\nexports.createRenderer = createRenderer;\nexports.createVNode = createVNode;\nexports.findDOMNode = findDOMNode;\nexports.getFlagsForElementVnode = getFlagsForElementVnode;\nexports.internal_DOMNodeMap = componentToDOMNodeMap;\nexports.internal_isUnitlessNumber = isUnitlessNumber;\nexports.internal_normalize = normalize;\nexports.internal_patch = patch;\nexports.linkEvent = linkEvent;\nexports.options = options;\nexports.render = render;\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno/dist/index.js\n// module id = 12\n// module chunks = 0","import { version } from 'inferno';\nimport Component from 'inferno-component';\nimport { SetupStorm, Storm } from './modules/storm/lib.js';\nimport app_base_spec from './storms/app-base/spec.js';\n\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n    }\n    environment() {\n        console.log('Environment starting up');\n    }\n    componentDidMount() {\n        const setState = this.setState.bind(this);\n        SetupStorm(setState)\n            .then(() => setState({ storm_set: true }))\n            .catch(err => console.log(err))\n    }\n    simTransition() {\n        \n    }\n    render() {\n        const state = this.state;\n        const setState = this.setState.bind(this);\n        return (\n            <Storm\n                namespace='app_base'\n                spec={app_base_spec}\n                store={state}\n                params={{}}\n                setStore={setState}\n                onInitialRender={() => this.environment()}\n                onError={(field, error) => console.log(\"ERROR: \", field, error)}>\n                {(store) => {\n                    //hey! try logging this store variable!\n                    return(\n                        <p style={{ margin: 20 }}>\n                            {'No more spaghetti state! The following are the props contained in the storm under the namespace, \"app_base\", in src/App.js:'}\n                            <br />\n                            {Object.keys(store).map(key => [key, store[key]]).join(', ')}\n                            <br />\n                            <br />\n                            {\"In lue of more official docs, given the simplicity of the code, I suggest starting with App.js, then jumping into storms/app-base.js\"}\n                            <br />\n                            {\"This file should give you the information needed to create a decent mental model of what is happening.\"}\n                            <br />\n                            <br />\n                            {\"This starter project uses \"}<a href='https://milligram.io/' target=\"_blank\">milligram.css</a>{\" via a cdn. \"}\n                            <br />\n                            {\"To remove this, just remove lines 13-15 in index.html within /public\"}\n                            <br />\n                            <br />\n                            {'Happy hacking!'}\n                            <br />\n                            <br />\n                            {\"P.S. The secret sauce is in modules/storm/lib.js\"}\n                            <br />\n                            {\"It's kinda messy. If you have suggestions or ideas for modifications please reach out to me at funky_chicken@protonmail.com!\"}\n                        </p>\n                    )\n                }}\n            </Storm>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = require('inferno');\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno-Component\r\n */ /** TypeDoc Comment */\r\n// Make sure u use EMPTY_OBJ from 'inferno', otherwise it'll be a different reference\r\nvar noOp = ERROR_MSG;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    noOp =\r\n        \"Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.\";\r\n}\r\nvar componentCallbackQueue = new Map();\r\nvar resolvedPromise = Promise.resolve();\r\nfunction addToQueue(component, force, callback) {\r\n    var queue = componentCallbackQueue.get(component);\r\n    if (queue === void 0) {\r\n        queue = [];\r\n        componentCallbackQueue.set(component, queue);\r\n        resolvedPromise.then((function () {\r\n            componentCallbackQueue.delete(component);\r\n            component._updating = true;\r\n            applyState(component, force, (function () {\r\n                for (var i = 0, len = queue.length; i < len; i++) {\r\n                    queue[i].call(component);\r\n                }\r\n            }));\r\n            component._updating = false;\r\n        }));\r\n    }\r\n    if (!isNullOrUndef(callback)) {\r\n        queue.push(callback);\r\n    }\r\n}\r\nfunction queueStateChanges(component, newState, callback) {\r\n    if (isFunction(newState)) {\r\n        newState = newState(component.state, component.props, component.context);\r\n    }\r\n    var pending = component._pendingState;\r\n    if (isNullOrUndef(pending)) {\r\n        component._pendingState = newState;\r\n    }\r\n    else {\r\n        for (var stateKey in newState) {\r\n            pending[stateKey] = newState[stateKey];\r\n        }\r\n    }\r\n    if (!component._pendingSetState && !component._blockRender) {\r\n        if (!component._updating) {\r\n            component._pendingSetState = true;\r\n            component._updating = true;\r\n            applyState(component, false, callback);\r\n            component._updating = false;\r\n        }\r\n        else {\r\n            addToQueue(component, false, callback);\r\n        }\r\n    }\r\n    else {\r\n        component._pendingSetState = true;\r\n        if (isFunction(callback) && component._blockRender) {\r\n            component._lifecycle.addListener(callback.bind(component));\r\n        }\r\n    }\r\n}\r\nfunction applyState(component, force, callback) {\r\n    if (component._unmounted) {\r\n        return;\r\n    }\r\n    if (force || !component._blockRender) {\r\n        component._pendingSetState = false;\r\n        var pendingState = component._pendingState;\r\n        var prevState = component.state;\r\n        var nextState = combineFrom(prevState, pendingState);\r\n        var props = component.props;\r\n        var context = component.context;\r\n        component._pendingState = null;\r\n        var nextInput;\r\n        var renderOutput = component._updateComponent(prevState, nextState, props, props, context, force, true);\r\n        var didUpdate = true;\r\n        if (isInvalid(renderOutput)) {\r\n            nextInput = inferno.createVNode(4096 /* Void */, null);\r\n        }\r\n        else if (renderOutput === NO_OP) {\r\n            nextInput = component._lastInput;\r\n            didUpdate = false;\r\n        }\r\n        else if (isStringOrNumber(renderOutput)) {\r\n            nextInput = inferno.createVNode(1 /* Text */, null, null, renderOutput);\r\n        }\r\n        else if (isArray(renderOutput)) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n            }\r\n            return throwError();\r\n        }\r\n        else {\r\n            nextInput = renderOutput;\r\n        }\r\n        var lastInput = component._lastInput;\r\n        var vNode = component._vNode;\r\n        var parentDom = (lastInput.dom && lastInput.dom.parentNode) ||\r\n            (lastInput.dom = vNode.dom);\r\n        if (nextInput.flags & 28 /* Component */) {\r\n            nextInput.parentVNode = vNode;\r\n        }\r\n        component._lastInput = nextInput;\r\n        if (didUpdate) {\r\n            var childContext;\r\n            if (!isNullOrUndef(component.getChildContext)) {\r\n                childContext = component.getChildContext();\r\n            }\r\n            if (isNullOrUndef(childContext)) {\r\n                childContext = component._childContext;\r\n            }\r\n            else {\r\n                childContext = combineFrom(context, childContext);\r\n            }\r\n            var lifeCycle = component._lifecycle;\r\n            inferno.internal_patch(lastInput, nextInput, parentDom, lifeCycle, childContext, component._isSVG, false);\r\n            // If this component was unmounted by its parent, do nothing. This is no-op\r\n            if (component._unmounted) {\r\n                return;\r\n            }\r\n            lifeCycle.trigger();\r\n            if (!isNullOrUndef(component.componentDidUpdate)) {\r\n                component.componentDidUpdate(props, prevState, context);\r\n            }\r\n            if (!isNull(inferno.options.afterUpdate)) {\r\n                inferno.options.afterUpdate(vNode);\r\n            }\r\n        }\r\n        var dom = (vNode.dom = nextInput.dom);\r\n        if (inferno.options.findDOMNodeEnabled) {\r\n            inferno.internal_DOMNodeMap.set(component, nextInput.dom);\r\n        }\r\n        while (!isNullOrUndef((vNode = vNode.parentVNode))) {\r\n            if ((vNode.flags & 28 /* Component */) > 0) {\r\n                vNode.dom = dom;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        component.state = component._pendingState;\r\n        component._pendingState = null;\r\n    }\r\n    if (isFunction(callback)) {\r\n        callback.call(component);\r\n    }\r\n}\r\nvar Component = function Component(props, context) {\r\n    this.state = null;\r\n    this._blockRender = false;\r\n    this._blockSetState = true;\r\n    this._pendingSetState = false;\r\n    this._pendingState = null;\r\n    this._lastInput = null;\r\n    this._vNode = null;\r\n    this._unmounted = false;\r\n    this._lifecycle = null;\r\n    this._childContext = null;\r\n    this._isSVG = false;\r\n    this._updating = true;\r\n    /** @type {object} */\r\n    this.props = props || inferno.EMPTY_OBJ;\r\n    /** @type {object} */\r\n    this.context = context || inferno.EMPTY_OBJ; // context should not be mutable\r\n};\r\nComponent.prototype.forceUpdate = function forceUpdate (callback) {\r\n    if (this._unmounted) {\r\n        return;\r\n    }\r\n    applyState(this, true, callback);\r\n};\r\nComponent.prototype.setState = function setState (newState, callback) {\r\n    if (this._unmounted) {\r\n        return;\r\n    }\r\n    if (!this._blockSetState) {\r\n        queueStateChanges(this, newState, callback);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"cannot update state via setState() in componentWillUpdate() or constructor.\");\r\n        }\r\n        throwError();\r\n    }\r\n};\r\nComponent.prototype._updateComponent = function _updateComponent (prevState, nextState, prevProps, nextProps, context, force, fromSetState) {\r\n    if (this._unmounted === true) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(noOp);\r\n        }\r\n        throwError();\r\n    }\r\n    if (prevProps !== nextProps ||\r\n        nextProps === inferno.EMPTY_OBJ ||\r\n        prevState !== nextState ||\r\n        force) {\r\n        if (prevProps !== nextProps || nextProps === inferno.EMPTY_OBJ) {\r\n            if (!isNullOrUndef(this.componentWillReceiveProps) && !fromSetState) {\r\n                this._blockRender = true;\r\n                this.componentWillReceiveProps(nextProps, context);\r\n                // If this component was removed during its own update do nothing...\r\n                if (this._unmounted) {\r\n                    return NO_OP;\r\n                }\r\n                this._blockRender = false;\r\n            }\r\n            if (this._pendingSetState) {\r\n                nextState = combineFrom(nextState, this._pendingState);\r\n                this._pendingSetState = false;\r\n                this._pendingState = null;\r\n            }\r\n        }\r\n        /* Update if scu is not defined, or it returns truthy value or force */\r\n        if (force ||\r\n            isNullOrUndef(this.shouldComponentUpdate) ||\r\n            (this.shouldComponentUpdate &&\r\n                this.shouldComponentUpdate(nextProps, nextState, context))) {\r\n            if (!isNullOrUndef(this.componentWillUpdate)) {\r\n                this._blockSetState = true;\r\n                this.componentWillUpdate(nextProps, nextState, context);\r\n                this._blockSetState = false;\r\n            }\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n            if (inferno.options.beforeRender) {\r\n                inferno.options.beforeRender(this);\r\n            }\r\n            var render = this.render(nextProps, nextState, context);\r\n            if (inferno.options.afterRender) {\r\n                inferno.options.afterRender(this);\r\n            }\r\n            return render;\r\n        }\r\n        else {\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n        }\r\n    }\r\n    return NO_OP;\r\n};\r\n// tslint:disable-next-line:no-empty\r\nComponent.prototype.render = function render (nextProps, nextState, nextContext) { };\n\nexports['default'] = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno-component/dist/index.js\n// module id = 14\n// module chunks = 0","import Inferno, { version } from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\n\nconst sys_namespace = 'storm:';\n\nexport const SetupStorm = (setStore) => {\n    return new Promise((resolve, reject) => {\n        setStore({\n            storm_transitions: (stormName, store) => {\n                const ns = sys_namespace + stormName + ':transitions';\n                return typeof store[ns] === 'undefined' ? {} : store[ns]\n            },\n            expose_storm: (stormName, store) => exposedNamespacedProps(store, sys_namespace + stormName + ':')\n        }, () => resolve())\n    })\n};\nexport const stormBackground = (context) => (userspace, store, getStore, scripts) => {\n    const transitions = store.storm_transitions(userspace, store);\n    scripts.forEach(script => script(transitions, () => getStore(userspace), context))\n} \nexport const Storm = class extends Component {\n    constructor(props) {\n        super(props);\n        this.state = Object.assign(\n            {},\n            {\n                baseSet: false,\n                namespace: sys_namespace + this.props.namespace + ':'\n            },\n            typeof this.props.loadersOnly != 'undefined' ?\n                {\n                    loaders: this.props.loadersOnly,\n                    addProps: () => ({}),\n                    transitions: {},\n                    background: () => null\n                }\n                :\n                this.props.spec(initSetScope(sys_namespace + this.props.namespace + ':', this.props.setStore, this.props.store)))\n    }\n    componentWillUnmount() {\n        \n        // const loaders = this.state.loaders(this.state.api, this.props.params || {});\n        //\n        // //garbage collect unused storm props\n        // this.props.setStore(\n        //     nullifyKeys(\n        //         composeStoreState(loaders, this.state.namespace, this.state.addProps(this.state.api), this.state.transitions)\n        //     )\n        // )\n    }\n    componentDidMount() {\n        const loaders = this.state.loaders(this.state.api, this.props.params);\n        const _this = this;\n        if (loaders.length === 0) {\n            this.setState({baseSet: true})\n            return\n        }\n        this.props.setStore(\n            composeStoreState(loaders, this.state.namespace, this.state.addProps(this.state.api), this.state.transitions),\n            () => this.setState({ baseSet: true },\n                () => {\n                    if (typeof this.props.onInitialRender === 'function') {\n                        this.props.onInitialRender(this.props.store)\n                    }\n                    loaders.forEach(\n                        ([loadKeys, { fetcher, bases }]) => {\n                            this.loadDataAtKey(\n                                fetcher, \n                                loadKeys, \n                                loadKeys.map(loadKey => this.state.namespace + loadKey), \n                                () => this.state.background(stormBackground(_this), { context: _this, store: this.props.store })\n                            )\n                        }\n                    )\n                }\n            )\n        )\n    }\n    loadDataAtKey(fetcher, load_keys, scoped_keys, cb) {\n        if (typeof fetcher === 'function') {\n            fetcher()\n                .then(data => scoped_keys.length === 1 ?\n                    this.props.setStore({ [scoped_keys[0]]: data }, () => typeof cb === 'function' ? cb() : null)\n                    :\n                    this.props.setStore(\n                        Object.assign(\n                            {},\n                            ...scoped_keys.map((scoped_key, i) => ({ [scoped_key]: data[load_keys[i]] }))\n                        ),\n                        () => typeof cb === 'function' ? cb() : null\n                    )\n                )\n                .catch(err => this.props.onError(scoped_keys, err))\n        }\n    }\n    render() {\n        if (this.state.baseSet) {\n            return this.renderReactiveChild(\n                exposedNamespacedProps(this.props.store, this.state.namespace)\n            )\n        } else {\n            return <div style={{display: \"none\"}}/>\n        }\n    }\n    renderReactiveChild(scopeStore) {\n        return createElement(this.props.children, scopeStore)\n    }\n};\n\nconst exposedNamespacedProps = (store, namespace) => {\n    return Object.keys(store).reduce((accum, val, i, array) => {\n        return Object.assign(\n            {}, \n            accum, \n            val.includes(namespace) && !val.includes('transitions') ? {[val.split(namespace)[1]]: store[val]} : null)\n    }, {})\n};\n\nconst nullifyKeys = (obj) => Object.keys(obj).reduce((accum, key, i, array) => {\n    accum[key] = null;\n    return accum\n}, {});\n\nconst composeStoreState = (loaders, namespace, additionalProps, transitions) => Object.assign(\n    {},\n    //helper props\n    padKeys(namespace, additionalProps),\n    //hacky persistence for transition functions\n    { [namespace +'transitions']: transitions },\n    //base case for each loader field\n    ...loaders.map(([loadKeys, { fetcher, bases }]) => Object.assign({},\n        ...loadKeys.map((loadKey, i) => ({ [namespace + loadKey]: bases[i] }))\n    ))\n);\n\nconst initSetScope = (namespace, setState, store) => {\n    return (transition, cb) => {\n        setState(\n            (state) => padKeys(\n                namespace,\n                transition(\n                    extractByNamespace(namespace, state)\n                )\n            ),\n            () => typeof cb === 'function' ? cb() : null\n        )\n    }\n};\n\nconst extractByNamespace = (namespace, state) => Object.keys(state).reduce((accum, key, i, array) => {\n    if (key.includes(namespace)) {\n        const field = key.split(namespace)[1];\n        accum[field] = state[key];\n    } \n    return accum\n}, {});\n\nconst padKeys = (pad, obj) => Object.keys(obj).reduce((accum, val, i, array) => Object.assign({}, accum, {[pad + val]: obj[val]}), {});\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/storm/lib.js","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno-create-element/index.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = require('inferno');\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno-Create-Element\r\n */ /** TypeDoc Comment */\r\nvar componentHooks = new Set();\r\ncomponentHooks.add(\"onComponentWillMount\");\r\ncomponentHooks.add(\"onComponentDidMount\");\r\ncomponentHooks.add(\"onComponentWillUnmount\");\r\ncomponentHooks.add(\"onComponentShouldUpdate\");\r\ncomponentHooks.add(\"onComponentWillUpdate\");\r\ncomponentHooks.add(\"onComponentDidUpdate\");\r\n/**\r\n * Creates virtual node\r\n * @param {string|Function|Component<any, any>} type Type of node\r\n * @param {object=} props Optional props for virtual node\r\n * @param {...{object}=} _children Optional children for virtual node\r\n * @returns {VNode} new virtual ndoe\r\n */\r\nfunction createElement(type, props) {\n    var _children = [], len = arguments.length - 2;\n    while ( len-- > 0 ) _children[ len ] = arguments[ len + 2 ];\n\r\n    if (isInvalid(type) || isObject(type)) {\r\n        throw new Error(\"Inferno Error: createElement() name parameter cannot be undefined, null, false or true, It must be a string, class or function.\");\r\n    }\r\n    var children = _children;\r\n    var ref = null;\r\n    var key = null;\r\n    var className = null;\r\n    var flags = 0;\r\n    var newProps;\r\n    if (_children) {\r\n        if (_children.length === 1) {\r\n            children = _children[0];\r\n        }\r\n        else if (_children.length === 0) {\r\n            children = void 0;\r\n        }\r\n    }\r\n    if (isString(type)) {\r\n        flags = inferno.getFlagsForElementVnode(type);\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop in props) {\r\n                if (prop === \"className\" || prop === \"class\") {\r\n                    className = props[prop];\r\n                }\r\n                else if (prop === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else if (prop === \"children\" && isUndefined(children)) {\r\n                    children = props.children; // always favour children args, default to props\r\n                }\r\n                else if (prop === \"ref\") {\r\n                    ref = props.ref;\r\n                }\r\n                else {\r\n                    newProps[prop] = props[prop];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        flags = 16 /* ComponentUnknown */;\r\n        if (!isUndefined(children)) {\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.children = children;\r\n            children = null;\r\n        }\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop$1 in props) {\r\n                if (componentHooks.has(prop$1)) {\r\n                    if (!ref) {\r\n                        ref = {};\r\n                    }\r\n                    ref[prop$1] = props[prop$1];\r\n                }\r\n                else if (prop$1 === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else {\r\n                    newProps[prop$1] = props[prop$1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return inferno.createVNode(flags, type, className, children, newProps, key, ref);\r\n}\n\nexports['default'] = createElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inferno-create-element/dist/index.js\n// module id = 17\n// module chunks = 0","import app_base from './background/entry.js';\n\nexport default (setScope) => ({\n    api: {\n        \n    },\n    loaders: (api, params) => ([\n        [\n            ['weather_data'],\n            {\n                fetcher: () => new Promise((resolve, reject) => resolve([])), //request must be a promise!\n                bases: [null]\n            }\n        ]\n    ]),\n    addProps: (api) => ({\n        //some additional properties to track\n        temperature: 75\n    }),\n    transitions: {\n        'heat_wave': () => setScope(\n            (state) => ({\n                temperature: state.temperature + 20\n            })\n        )\n    },\n    background: app_base\n});\n\n\n// WEBPACK FOOTER //\n// ./src/storms/app-base/spec.js","import weather_patterns from './weather-patterns.js';\n\n//EDIT HERE. add any scripts that need to run with access to storm:app_store's state\nconst BACKGROUND_SCRIPTS = [\n    weather_patterns\n];\n\n//This is an implementation detail. You don't need to know what it's up to. \nexport default (initBackgroundScripts, { context, store }) => {\n    context.componentWillUpdate = (nextProps, nextState) => {\n        store = nextProps.store;\n    };\n    const getStore = (stormspace) => {\n        return store.expose_storm(stormspace, store)\n    };\n    initBackgroundScripts(\n        'app_base',\n        store,\n        getStore,\n        BACKGROUND_SCRIPTS\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/storms/app-base/background/entry.js","export default (transitions, getStore, storm) => {\n    //what's storm? just a ref to our store's parent component. aka the 'this' in this.state\n    storm.componentWillUnmount = () => {\n        //destroy any lingering setIntervals when this storm unmounts.\n        //or leave it running. you do you\n    };\n    setTimeout(() => {\n        const { heat_wave } = transitions;\n        heat_wave();\n        setTimeout(() => {        \n            console.log(getStore());\n        }, 1000);\n    }, 4000)\n}\n\n\n// WEBPACK FOOTER //\n// ./src/storms/app-base/background/weather-patterns.js"],"sourceRoot":""}